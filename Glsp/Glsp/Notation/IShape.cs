//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.21
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Glsp.Notation
{
    
    
    /// <summary>
    /// The public interface for Shape
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Shape))]
    [XmlDefaultImplementationTypeAttribute(typeof(Shape))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/glsp/notation#//Shape")]
    public interface IShape : IModelElement, INotationElement
    {
        
        /// <summary>
        /// The position property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("position")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IGPoint Position
        {
            get;
            set;
        }
        
        /// <summary>
        /// The size property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("size")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IGDimension Size
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the Position property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PositionChanging;
        
        /// <summary>
        /// Gets fired when the Position property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> PositionChanged;
        
        /// <summary>
        /// Gets fired before the Size property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeChanging;
        
        /// <summary>
        /// Gets fired when the Size property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SizeChanged;
    }
}

