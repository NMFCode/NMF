//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;

namespace NMF.Models.Tests.Railway
{
    
    
    /// <summary>
    /// The public interface for Route
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Route))]
    [XmlDefaultImplementationTypeAttribute(typeof(Route))]
    [ModelRepresentationClassAttribute("http://www.semanticweb.org/ontologies/2015/ttc/trainbenchmark#//Route")]
    public interface IRoute : IModelElement, IRailwayElement
    {
        
        /// <summary>
        /// The entry property
        /// </summary>
        [DisplayNameAttribute("entry")]
        [CategoryAttribute("Route")]
        [XmlElementNameAttribute("entry")]
        [XmlAttributeAttribute(true)]
        ISemaphore Entry
        {
            get;
            set;
        }
        
        /// <summary>
        /// The follows property
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("follows")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("route")]
        [ConstantAttribute()]
        IListExpression<ISwitchPosition> Follows
        {
            get;
        }
        
        /// <summary>
        /// The exit property
        /// </summary>
        [DisplayNameAttribute("exit")]
        [CategoryAttribute("Route")]
        [XmlElementNameAttribute("exit")]
        [XmlAttributeAttribute(true)]
        ISemaphore Exit
        {
            get;
            set;
        }
        
        /// <summary>
        /// The definedBy property
        /// </summary>
        [LowerBoundAttribute(2)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("definedBy")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [ConstantAttribute()]
        IListExpression<ISensor> DefinedBy
        {
            get;
        }
        
        /// <summary>
        /// Gets fired before the Entry property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EntryChanging;
        
        /// <summary>
        /// Gets fired when the Entry property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> EntryChanged;
        
        /// <summary>
        /// Gets fired before the Exit property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ExitChanging;
        
        /// <summary>
        /// Gets fired when the Exit property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> ExitChanged;
    }
}

