<?xml version="1.0" encoding="utf-8"?>
<nmeta:Namespace xmi:version="2.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" Uri="http://www.omg.org/spec/MOF/20131001/cmof.xmi" Prefix="cmof" Name="cmof" xmlns:xmi="http://www.omg.org/XMI" xmlns:nmeta="http://nmf.codeplex.com/nmeta/">
  <Types xsi:type="nmeta:Class" BaseTypes="#//ReflectiveCollection" Name="ReflectiveSequence">
    <Operations Refines="#//ReflectiveCollection/add" IsUnique="true" LowerBound="1" Name="add">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="index" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
    <Operations Refines="#//Object/get" IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="get">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="index" />
    </Operations>
    <Operations Refines="#//ReflectiveCollection/remove" IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="remove">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="index" />
    </Operations>
    <Operations Refines="#//Object/set" IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="set">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="index" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Object" Name="ReflectiveCollection">
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="add">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="addAll">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//ReflectiveCollection" Name="objects" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Name="clear" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="remove">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="size" />
  </Types>
  <Types xsi:type="nmeta:Class" Name="Object">
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="get">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Property" Name="property" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="equals">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="element" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Name="set">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Property" Name="property" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="value" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isSet">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Property" Name="property" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Name="unset">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Property" Name="property" />
    </Operations>
    <Operations IsUnique="true" Type="nmeta:Class #//Object" Name="invoke">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Operation" Name="op" />
      <Parameters IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Argument" Name="arguments" />
    </Operations>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//StructuralFeature" Name="Property" Summary="A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association.">
    <References Opposite="#//Class/ownedAttribute" ReferenceType="nmeta:Class #//Class" IsUnique="true" Name="class" Summary="References the Class that owns the Property.&#xA;References the Class that owns the Property.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Class that owns the Property.&#xA;References the Class that owns the Property." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//DataType/ownedAttribute" ReferenceType="nmeta:Class #//DataType" IsUnique="true" Name="datatype" Summary="The DataType that owns this Property.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The DataType that owns this Property." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Association/memberEnd" ReferenceType="nmeta:Class #//Association" Name="association" Summary="References the association of which this property is a member, if any.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the association of which this property is a member, if any." />
      </Extensions>
    </References>
    <References Opposite="#//Association/ownedEnd" ReferenceType="nmeta:Class #//Association" Refines="#//Property/association" IsUnique="true" Name="owningAssociation" Summary="References the owning association of this property, if any.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the owning association of this property, if any." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" Name="defaultValue" Summary="A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A ValueSpecification that is evaluated to give a default value for the Property when an object of the owning Classifier is instantiated." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Property" IsUnique="true" UpperBound="-1" Name="redefinedProperty" Summary="References the properties that are redefined by this property.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the properties that are redefined by this property." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Property" IsUnique="true" UpperBound="-1" Name="subsettedProperty" Summary="References the properties of which this property is constrained to be a subset.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the properties of which this property is constrained to be a subset." />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="multiplicity_of_composite" Summary="A multiplicity of a composite aggregation must not have an upper bound greater than 1.&#xA;A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.&#xA;isComposite implies (upperBound()-&gt;isEmpty() or upperBound() &lt;= 1)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A multiplicity of a composite aggregation must not have an upper bound greater than 1.&#xA;A multiplicity on an aggregate end of a composite aggregation must not have an upper bound greater than 1.&#xA;isComposite implies (upperBound()-&gt;isEmpty() or upperBound() &lt;= 1)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="subsetting_context_conforms" Summary="Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.&#xA;self.subsettedProperty-&gt;notEmpty() implies&#xA;  (self.subsettingContext()-&gt;notEmpty() and self.subsettingContext()-&gt;forAll (sc |&#xA;    self.subsettedProperty-&gt;forAll(sp |&#xA;      sp.subsettingContext()-&gt;exists(c | sc.conformsTo(c)))))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Subsetting may only occur when the context of the subsetting property conforms to the context of the subsetted property.&#xA;self.subsettedProperty-&gt;notEmpty() implies&#xA;  (self.subsettingContext()-&gt;notEmpty() and self.subsettingContext()-&gt;forAll (sc |&#xA;    self.subsettedProperty-&gt;forAll(sp |&#xA;      sp.subsettingContext()-&gt;exists(c | sc.conformsTo(c)))))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="derived_union_is_read_only" Summary="A derived union is read only.&#xA;isDerivedUnion implies isReadOnly">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A derived union is read only.&#xA;isDerivedUnion implies isReadOnly" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="redefined_property_inherited" Summary="A redefined property must be inherited from a more general classifier containing the redefining property.&#xA;if (redefinedProperty-&gt;notEmpty()) then&#xA;  (redefinitionContext-&gt;notEmpty() and&#xA;      redefinedProperty-&gt;forAll(rp|&#xA;        ((redefinitionContext-&gt;collect(fc|&#xA;          fc.allParents()))-&gt;asSet())-&gt;collect(c| c.allFeatures())-&gt;asSet()-&gt;includes(rp))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A redefined property must be inherited from a more general classifier containing the redefining property.&#xA;if (redefinedProperty-&gt;notEmpty()) then&#xA;  (redefinitionContext-&gt;notEmpty() and&#xA;      redefinedProperty-&gt;forAll(rp|&#xA;        ((redefinitionContext-&gt;collect(fc|&#xA;          fc.allParents()))-&gt;asSet())-&gt;collect(c| c.allFeatures())-&gt;asSet()-&gt;includes(rp))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="subsetted_property_names" Summary="A property may not subset a property with the same name.&#xA;true">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A property may not subset a property with the same name.&#xA;true" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="derived_union_is_derived" Summary="A derived union is derived.&#xA;isDerivedUnion implies isDerived">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A derived union is derived.&#xA;isDerivedUnion implies isDerived" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="subsetting_rules" Summary="A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.&#xA;self.subsettedProperty-&gt;forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()-&gt;notEmpty() and sp.upperBound()-&gt;notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A subsetting property may strengthen the type of the subsetted property, and its upper bound may be less.&#xA;self.subsettedProperty-&gt;forAll(sp |&#xA;  self.type.conformsTo(sp.type) and&#xA;    ((self.upperBound()-&gt;notEmpty() and sp.upperBound()-&gt;notEmpty()) implies&#xA;      self.upperBound()&lt;=sp.upperBound() ))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isAttribute" Summary="The query isAttribute() is true if the Property is defined as an attribute of some classifier.&#xA;result = Classifier.allInstances-&gt;exists(c | c.attribute-&gt;includes(p))">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Property" Name="p" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isAttribute() is true if the Property is defined as an attribute of some classifier.&#xA;result = Classifier.allInstances-&gt;exists(c | c.attribute-&gt;includes(p))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isNavigable" Summary="The query isNavigable() indicates whether it is possible to navigate across the property.&#xA;result = not classifier-&gt;isEmpty() or association.owningAssociation.navigableOwnedEnd-&gt;includes(self)">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isNavigable() indicates whether it is possible to navigate across the property.&#xA;result = not classifier-&gt;isEmpty() or association.owningAssociation.navigableOwnedEnd-&gt;includes(self)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Type" Name="subsettingContext" Summary="The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.&#xA;result = if association-&gt;notEmpty()&#xA;then association.endType-type&#xA;else if classifier-&gt;notEmpty() then Set{classifier} else Set{} endif&#xA;endif">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query subsettingContext() gives the context for subsetting a property. It consists, in the case of an attribute, of the corresponding classifier, and in the case of an association end, all of the classifiers at the other ends.&#xA;result = if association-&gt;notEmpty()&#xA;then association.endType-type&#xA;else if classifier-&gt;notEmpty() then Set{classifier} else Set{} endif&#xA;endif" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="none" IsUnique="true" LowerBound="1" Type="nmeta:Enumeration #//AggregationKind" Name="aggregation" Summary="Specifies the kind of aggregation that applies to the Property.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the kind of aggregation that applies to the Property." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isDerived" Summary="If isDerived is true, the value of the attribute is derived from information elsewhere.&#xA;Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If isDerived is true, the value of the attribute is derived from information elsewhere.&#xA;Specifies whether the Property is derived, i.e., whether its value or values can be computed from other information." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isDerivedUnion" Summary="Specifies whether the property is derived as the union of all of the properties that are constrained to subset it.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies whether the property is derived as the union of all of the properties that are constrained to subset it." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isID" Summary="True indicates this property can be used to uniquely identify an instance of the containing Class.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=True indicates this property can be used to uniquely identify an instance of the containing Class." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A property is a structural feature of a classifier that characterizes instances of the classifier. A property related by ownedAttribute to a classifier (other than an association) represents an attribute and might also represent an association end. It relates an instance of the class to a value or set of values of the type of the attribute. A property related by memberEnd or its specializations to an association represents an end of the association. The type of the property is the type of the end of the association." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Feature #//MultiplicityElement #//TypedElement" Name="StructuralFeature" Summary="A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.&#xA;By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature.">
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isReadOnly" Summary="States whether the feature's value may be modified by a client.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=States whether the feature's value may be modified by a client." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A structural feature is a typed feature of a classifier that specifies the structure of instances of the classifier.&#xA;By specializing multiplicity element, it supports a multiplicity that specifies valid cardinalities for the collection of values associated with an instantiation of the structural feature." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//RedefinableElement" Name="Feature" Summary="A feature declares a behavioral or structural characteristic of instances of classifiers.">
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isStatic" Summary="Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true).">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies whether this feature characterizes individual instances classified by the classifier (false) or the classifier itself (true)." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A feature declares a behavioral or structural characteristic of instances of classifiers." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//NamedElement" Name="RedefinableElement" Summary="A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier.">
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="redefinition_consistent" Summary="A redefining element must be consistent with each redefined element.&#xA;self.redefinedElement-&gt;forAll(re | re.isConsistentWith(self))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A redefining element must be consistent with each redefined element.&#xA;self.redefinedElement-&gt;forAll(re | re.isConsistentWith(self))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="non_leaf_redefinition" Summary="A redefinable element can only redefine non-leaf redefinable elements&#xA;self.redefinedElement-&gt;forAll(not isLeaf)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A redefinable element can only redefine non-leaf redefinable elements&#xA;self.redefinedElement-&gt;forAll(not isLeaf)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="redefinition_context_valid" Summary="At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.&#xA;self.redefinedElement-&gt;forAll(e | self.isRedefinitionContextValid(e))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=At least one of the redefinition contexts of the redefining element must be a specialization of at least one of the redefinition contexts for each redefined element.&#xA;self.redefinedElement-&gt;forAll(e | self.isRedefinitionContextValid(e))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isConsistentWith" Summary="The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.&#xA;redefinee.isRedefinitionContextValid(self)&#xA;result = false">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//RedefinableElement" Name="redefinee" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isConsistentWith() specifies, for any two RedefinableElements in a context in which redefinition is possible, whether redefinition would be logically consistent. By default, this is false; this operation must be overridden for subclasses of RedefinableElement to define the consistency conditions.&#xA;redefinee.isRedefinitionContextValid(self)&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isRedefinitionContextValid" Summary="The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.&#xA;result = redefinitionContext-&gt;exists(c | c.allParents()-&gt;includes(redefined.redefinitionContext)))">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//RedefinableElement" Name="redefined" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isRedefinitionContextValid() specifies whether the redefinition contexts of this RedefinableElement are properly related to the redefinition contexts of the specified RedefinableElement to allow this element to redefine the other. By default at least one of the redefinition contexts of this element must be a specialization of at least one of the redefinition contexts of the specified element.&#xA;result = redefinitionContext-&gt;exists(c | c.allParents()-&gt;includes(redefined.redefinitionContext)))" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isLeaf" Summary="Indicates whether it is possible to further redefine a RedefinableElement. If the value is true, then it is not possible to further redefine the RedefinableElement. Note that this property is preserved through package merge operations; that is, the capability to redefine a RedefinableElement (i.e., isLeaf=false) must be preserved in the resulting RedefinableElement of a package merge operation where a RedefinableElement with isLeaf=false is merged with a matching RedefinableElement with isLeaf=true: the resulting RedefinableElement will have isLeaf=false. Default value is false.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates whether it is possible to further redefine a RedefinableElement. If the value is true, then it is not possible to further redefine the RedefinableElement. Note that this property is preserved through package merge operations; that is, the capability to redefine a RedefinableElement (i.e., isLeaf=false) must be preserved in the resulting RedefinableElement of a package merge operation where a RedefinableElement with isLeaf=false is merged with a matching RedefinableElement with isLeaf=true: the resulting RedefinableElement will have isLeaf=false. Default value is false." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A redefinable element is an element that, when defined in the context of a classifier, can be redefined more specifically or differently in the context of another classifier that specializes (directly or indirectly) the context classifier." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" IdentifierScope="Local" BaseTypes="#//Element" Identifier="#//NamedElement/name" Name="NamedElement" Summary="A named element is an element in a model that may have a name.">
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="visibility_needs_ownership" Summary="If a NamedElement is not owned by a Namespace, it does not have a visibility.&#xA;namespace-&gt;isEmpty() implies visibility-&gt;isEmpty()">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If a NamedElement is not owned by a Namespace, it does not have a visibility.&#xA;namespace-&gt;isEmpty() implies visibility-&gt;isEmpty()" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="has_no_qualified_name" Summary="If there is no name, or one of the containing namespaces has no name, there is no qualified name.&#xA;(self.name-&gt;isEmpty() or self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;notEmpty())&#xA;  implies self.qualifiedName-&gt;isEmpty()">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If there is no name, or one of the containing namespaces has no name, there is no qualified name.&#xA;(self.name-&gt;isEmpty() or self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;notEmpty())&#xA;  implies self.qualifiedName-&gt;isEmpty()" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="has_qualified_name" Summary="When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;(self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=When there is a name, and all of the containing namespaces have a name, the qualified name is constructed from the names of the containing namespaces.&#xA;(self.name-&gt;notEmpty() and self.allNamespaces()-&gt;select(ns | ns.name-&gt;isEmpty())-&gt;isEmpty()) implies&#xA;  self.qualifiedName = self.allNamespaces()-&gt;iterate( ns : Namespace; result: String = self.name | ns.name-&gt;union(self.separator())-&gt;union(result))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Namespace" Name="allNamespaces" Summary="The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xA;result = if self.namespace-&gt;isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()-&gt;prepend(self.namespace)&#xA;endif">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query allNamespaces() gives the sequence of namespaces in which the NamedElement is nested, working outwards.&#xA;result = if self.namespace-&gt;isEmpty()&#xA;then Sequence{}&#xA;else self.namespace.allNamespaces()-&gt;prepend(self.namespace)&#xA;endif" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isDistinguishableFrom" Summary="The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;isEmpty()&#xA;else true&#xA;endif">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//NamedElement" Name="n" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Namespace" Name="ns" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isDistinguishableFrom() determines whether two NamedElements may logically co-exist within a Namespace. By default, two named elements are distinguishable if (a) they have unrelated types or (b) they have related types but different names.&#xA;result = if self.oclIsKindOf(n.oclType) or n.oclIsKindOf(self.oclType)&#xA;then ns.getNamesOfMember(self)-&gt;intersection(ns.getNamesOfMember(n))-&gt;isEmpty()&#xA;else true&#xA;endif" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="separator" Summary="The query separator() gives the string that is used to separate names when constructing a qualified name.&#xA;result = '::'">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query separator() gives the string that is used to separate names when constructing a qualified name.&#xA;result = '::'" />
      </Extensions>
    </Operations>
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="name" Summary="The name of the NamedElement.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The name of the NamedElement." />
      </Extensions>
    </Attributes>
    <Attributes IsUnique="true" Type="nmeta:Enumeration #//VisibilityKind" Name="visibility" Summary="Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Determines where the NamedElement appears within different Namespaces within the overall model, and its accessibility." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A named element is an element in a model that may have a name." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Object" Name="Element" Summary="An element is a constituent of a model. As such, it has the capability of owning other elements.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//Comment" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedComment" Summary="The Comments owned by this element.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The Comments owned by this element." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="has_owner" Summary="Elements that must be owned must have an owner.&#xA;self.mustBeOwned() implies owner-&gt;notEmpty()">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Elements that must be owned must have an owner.&#xA;self.mustBeOwned() implies owner-&gt;notEmpty()" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="not_own_self" Summary="An element may not directly or indirectly own itself.&#xA;not self.allOwnedElements()-&gt;includes(self)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An element may not directly or indirectly own itself.&#xA;not self.allOwnedElements()-&gt;includes(self)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Element" Name="allOwnedElements" Summary="The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xA;result = ownedElement-&gt;union(ownedElement-&gt;collect(e | e.allOwnedElements()))">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query allOwnedElements() gives all of the direct and indirect owned elements of an element.&#xA;result = ownedElement-&gt;union(ownedElement-&gt;collect(e | e.allOwnedElements()))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="mustBeOwned" Summary="The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xA;result = true">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query mustBeOwned() indicates whether elements of this type must have an owner. Subclasses of Element that do not require an owner must override this operation.&#xA;result = true" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Class" Name="getMetaClass" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="container" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isInstanceOfType">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Class" Name="type" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="includesSubtypes" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Name="delete" />
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An element is a constituent of a model. As such, it has the capability of owning other elements." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Element" Name="Comment" Summary="A comment is a textual annotation that can be attached to a set of elements.">
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" UpperBound="-1" Name="annotatedElement" Summary="References the Element(s) being commented.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Element(s) being commented." />
      </Extensions>
    </References>
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="body" Summary="Specifies a string that is the comment.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies a string that is the comment." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A comment is a textual annotation that can be attached to a set of elements." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Classifier" Name="Class" Summary="A class describes a set of objects that share the same specifications of features, constraints, and semantics.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//Classifier" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="nestedClassifier" Summary="References all the Classifiers that are defined (nested) within the Class.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References all the Classifiers that are defined (nested) within the Class." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Property/class" ReferenceType="nmeta:Class #//Property" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedAttribute" Summary="The attributes (i.e. the properties) owned by the class.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The attributes (i.e. the properties) owned by the class." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Operation/class" ReferenceType="nmeta:Class #//Operation" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedOperation" Summary="The operations owned by the class.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The operations owned by the class." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A class describes a set of objects that share the same specifications of features, constraints, and semantics." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Namespace #//RedefinableElement #//Type" Name="Classifier" Summary="A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers.">
    <References IsContainment="true" Opposite="#//Generalization/specific" ReferenceType="nmeta:Class #//Generalization" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="generalization" Summary="Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the Generalization relationships for this Classifier. These Generalizations navigaten to more general classifiers in the generalization hierarchy." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Classifier" IsUnique="true" UpperBound="-1" Name="redefinedClassifier" Summary="References the Classifiers that are redefined by this Classifier.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Classifiers that are redefined by this Classifier." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="non_final_parents" Summary="The parents of a classifier must be non-final.&#xA;self.parents()-&gt;forAll(not isFinalSpecialization)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The parents of a classifier must be non-final.&#xA;self.parents()-&gt;forAll(not isFinalSpecialization)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="specialize_type" Summary="A classifier may only specialize classifiers of a valid type.&#xA;self.parents()-&gt;forAll(c | self.maySpecializeType(c))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A classifier may only specialize classifiers of a valid type.&#xA;self.parents()-&gt;forAll(c | self.maySpecializeType(c))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="no_cycles_in_generalization" Summary="Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xA;not self.allParents()-&gt;includes(self)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Generalization hierarchies must be directed and acyclical. A classifier can not be both a transitively general and transitively specific classifier of the same classifier.&#xA;not self.allParents()-&gt;includes(self)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Feature" Name="allFeatures" Summary="The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xA;result = member-&gt;select(oclIsKindOf(Feature))">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query allFeatures() gives all of the features in the namespace of the classifier. In general, through mechanisms such as inheritance, this will be a larger set than feature.&#xA;result = member-&gt;select(oclIsKindOf(Feature))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Classifier" Name="allParents" Summary="The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xA;result = self.parents()-&gt;union(self.parents()-&gt;collect(p | p.allParents())">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query allParents() gives all of the direct and indirect ancestors of a generalized Classifier.&#xA;result = self.parents()-&gt;union(self.parents()-&gt;collect(p | p.allParents())" />
      </Extensions>
    </Operations>
    <Operations Refines="#//Type/conformsTo" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="conformsTo" Summary="The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xA;result = (self=other) or (self.allParents()-&gt;includes(other))">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Classifier" Name="other" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query conformsTo() gives true for a classifier that defines a type that conforms to another. This is used, for example, in the specification of signature conformance for operations.&#xA;result = (self=other) or (self.allParents()-&gt;includes(other))" />
        <Annotations Source="redefines" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="hasVisibilityOf" Summary="The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xA;result = (n.visibility &lt;&gt; VisibilityKind::private)&#xA;self.allParents()-&gt;including(self)-&gt;collect(c | c.member)-&gt;includes(n)">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//NamedElement" Name="n" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query hasVisibilityOf() determines whether a named element is visible in the classifier. By default all are visible. It is only called when the argument is something owned by a parent.&#xA;result = (n.visibility &lt;&gt; VisibilityKind::private)&#xA;self.allParents()-&gt;including(self)-&gt;collect(c | c.member)-&gt;includes(n)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//NamedElement" Name="inherit" Summary="The inherit operation is overridden to exclude redefined properties.&#xA;The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.&#xA;result = inhs">
      <Parameters IsUnique="true" UpperBound="-1" Type="nmeta:Class #//NamedElement" Name="inhs" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The inherit operation is overridden to exclude redefined properties.&#xA;The query inherit() defines how to inherit a set of elements. Here the operation is defined to inherit them all. It is intended to be redefined in circumstances where inheritance is affected by redefinition.&#xA;result = inhs" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//NamedElement" Name="inheritableMembers" Summary="The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xA;c.allParents()-&gt;includes(self)&#xA;result = member-&gt;select(m | c.hasVisibilityOf(m))">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Classifier" Name="c" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query inheritableMembers() gives all of the members of a classifier that may be inherited in one of its descendants, subject to whatever visibility restrictions apply.&#xA;c.allParents()-&gt;includes(self)&#xA;result = member-&gt;select(m | c.hasVisibilityOf(m))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="maySpecializeType" Summary="The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xA;result = self.oclIsKindOf(c.oclType)">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Classifier" Name="c" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query maySpecializeType() determines whether this classifier may have a generalization relationship to classifiers of the specified type. By default a classifier may specialize classifiers of the same or a more general type. It is intended to be redefined by classifiers that have different specialization constraints.&#xA;result = self.oclIsKindOf(c.oclType)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Classifier" Name="parents" Summary="The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xA;result = generalization.general">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query parents() gives all of the immediate ancestors of a generalized Classifier.&#xA;result = generalization.general" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isAbstract" Summary="If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If true, the Classifier does not provide a complete declaration and can typically not be instantiated. An abstract classifier is intended to be used by other classifiers e.g. as the target of general metarelationships or generalization relationships." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isFinalSpecialization" Summary="If true, the Classifier cannot be specialized by generalization. Note that this property is preserved through package merge operations; that is, the capability to specialize a Classifier (i.e., isFinalSpecialization =false) must be preserved in the resulting Classifier of a package merge operation where a Classifier with isFinalSpecialization =false is merged with a matching Classifier with isFinalSpecialization =true: the resulting Classifier will have isFinalSpecialization =false.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If true, the Classifier cannot be specialized by generalization. Note that this property is preserved through package merge operations; that is, the capability to specialize a Classifier (i.e., isFinalSpecialization =false) must be preserved in the resulting Classifier of a package merge operation where a Classifier with isFinalSpecialization =false is merged with a matching Classifier with isFinalSpecialization =true: the resulting Classifier will have isFinalSpecialization =false." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A classifier is a classification of instances - it describes a set of instances that have features in common. A classifier can specify a generalization hierarchy by referencing its general classifiers." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//PackageableElement" Name="Type" Summary="A type is a named element that is used as the type for a typed element. A type can be contained in a package.&#xA;A type constrains the values represented by a typed element.">
    <References Opposite="#//Package/ownedType" ReferenceType="nmeta:Class #//Package" IsUnique="true" Name="package" Summary="Specifies the owning package of this classifier, if any.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the owning package of this classifier, if any." />
      </Extensions>
    </References>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="conformsTo" Summary="The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xA;result = false">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Type" Name="other" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query conformsTo() gives true for a type that conforms to another. By default, two types do not conform to each other. This query is intended to be redefined for specific conformance situations.&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isInstance">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A type is a named element that is used as the type for a typed element. A type can be contained in a package.&#xA;A type constrains the values represented by a typed element." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//NamedElement" Name="PackageableElement" Summary="A packageable element indicates a named element that may be owned directly by a package.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A packageable element indicates a named element that may be owned directly by a package." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Enumeration" Name="VisibilityKind" Summary="VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model.">
    <Literals Name="public" Summary="A public element is visible to all elements that can access the contents of the namespace that owns it.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A public element is visible to all elements that can access the contents of the namespace that owns it." />
      </Extensions>
    </Literals>
    <Literals Value="1" Name="private" Summary="A private element is only visible inside the namespace that owns it.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A private element is only visible inside the namespace that owns it." />
      </Extensions>
    </Literals>
    <Literals Value="2" Name="protected" Summary="A protected element is visible to elements that have a generalization relationship to the namespace that owns it.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A protected element is visible to elements that have a generalization relationship to the namespace that owns it." />
      </Extensions>
    </Literals>
    <Literals Value="3" Name="package" Summary="A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility. Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility). Outside the nearest enclosing package, an element marked as having package visibility is not visible.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A package element is owned by a namespace that is not a package, and is visible to elements that are in the same package as its owning namespace. Only named elements that are not owned by packages can be marked as having package visibility. Any element marked as having package visibility is visible to all elements within the nearest enclosing package (given that other owning elements have proper visibility). Outside the nearest enclosing package, an element marked as having package visibility is not visible." />
      </Extensions>
    </Literals>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=VisibilityKind is an enumeration type that defines literals to determine the visibility of elements in a model." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Namespace #//PackageableElement" Name="Package" Summary="A package is used to group elements, and provides a namespace for the grouped elements.">
    <References IsContainment="true" Opposite="#//Package/nestingPackage" ReferenceType="nmeta:Class #//Package" Refines="#//Package/packagedElement" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="nestedPackage" Summary="References the packaged elements that are Packages.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the packaged elements that are Packages." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//PackageMerge/receivingPackage" ReferenceType="nmeta:Class #//PackageMerge" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="packageMerge" Summary="References the PackageMerges that are owned by this Package.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the PackageMerges that are owned by this Package." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//PackageableElement" IsOrdered="true" UpperBound="-1" Name="packagedElement" Summary="Specifies the packageable elements that are owned by this Package.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the packageable elements that are owned by this Package." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Type/package" ReferenceType="nmeta:Class #//Type" Refines="#//Package/packagedElement" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedType" Summary="References the packaged elements that are Types.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the packaged elements that are Types." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Package/nestedPackage" ReferenceType="nmeta:Class #//Package" IsUnique="true" Name="nestingPackage" Summary="References the Package that owns this Package.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Package that owns this Package." />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="elements_public_or_private" Summary="If an element that is owned by a package has visibility, it is public or private.&#xA;self.ownedElements-&gt;forAll(e | e.visibility-&gt;notEmpty() implies e.visbility = #public or e.visibility = #private)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If an element that is owned by a package has visibility, it is public or private.&#xA;self.ownedElements-&gt;forAll(e | e.visibility-&gt;notEmpty() implies e.visbility = #public or e.visibility = #private)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="makesVisible" Summary="The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.&#xA;result = (ownedMember-&gt;includes(el)) or&#xA;(elementImport-&gt;select(ei|ei.importedElement = #public)-&gt;collect(ei|ei.importedElement)-&gt;includes(el)) or&#xA;(packageImport-&gt;select(pi|pi.visibility = #public)-&gt;collect(pi|pi.importedPackage.member-&gt;includes(el))-&gt;notEmpty())&#xA;self.member-&gt;includes(el)">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//NamedElement" Name="el" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query makesVisible() defines whether a Package makes an element visible outside itself. Elements with no visibility and elements with public visibility are made visible.&#xA;result = (ownedMember-&gt;includes(el)) or&#xA;(elementImport-&gt;select(ei|ei.importedElement = #public)-&gt;collect(ei|ei.importedElement)-&gt;includes(el)) or&#xA;(packageImport-&gt;select(pi|pi.visibility = #public)-&gt;collect(pi|pi.importedPackage.member-&gt;includes(el))-&gt;notEmpty())&#xA;self.member-&gt;includes(el)" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//PackageableElement" Name="visibleMembers" Summary="The query visibleMembers() defines which members of a Package can be accessed outside it.&#xA;result = member-&gt;select( m | self.makesVisible(m))">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query visibleMembers() defines which members of a Package can be accessed outside it.&#xA;result = member-&gt;select( m | self.makesVisible(m))" />
      </Extensions>
    </Operations>
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="URI" Summary="Provides an identifier for the package that can be used for many purposes. A URI is the universally unique identification of the package following the IETF URI specification, RFC 2396 http://www.ietf.org/rfc/rfc2396.txt and it must comply with those syntax rules.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Provides an identifier for the package that can be used for many purposes. A URI is the universally unique identification of the package following the IETF URI specification, RFC 2396 http://www.ietf.org/rfc/rfc2396.txt and it must comply with those syntax rules." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A package is used to group elements, and provides a namespace for the grouped elements." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//NamedElement" Name="Namespace" Summary="A namespace is an element in a model that contains a set of named elements that can be identified by name.">
    <References IsContainment="true" Opposite="#//ElementImport/importingNamespace" ReferenceType="nmeta:Class #//ElementImport" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="elementImport" Summary="References the ElementImports owned by the Namespace.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the ElementImports owned by the Namespace." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Constraint/context" ReferenceType="nmeta:Class #//Constraint" IsOrdered="true" UpperBound="-1" Name="ownedRule" Summary="Specifies a set of Constraints owned by this Namespace.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies a set of Constraints owned by this Namespace." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//PackageImport/importingNamespace" ReferenceType="nmeta:Class #//PackageImport" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="packageImport" Summary="References the PackageImports owned by the Namespace.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the PackageImports owned by the Namespace." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="members_distinguishable" Summary="All the members of a Namespace are distinguishable within it.&#xA;membersAreDistinguishable()">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=All the members of a Namespace are distinguishable within it.&#xA;membersAreDistinguishable()" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//PackageableElement" Name="excludeCollisions" Summary="The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.&#xA;result = imps-&gt;reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))">
      <Parameters IsUnique="true" UpperBound="-1" Type="nmeta:Class #//PackageableElement" Name="imps" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query excludeCollisions() excludes from a set of PackageableElements any that would not be distinguishable from each other in this namespace.&#xA;result = imps-&gt;reject(imp1 | imps.exists(imp2 | not imp1.isDistinguishableFrom(imp2, self)))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="getNamesOfMember" Summary="The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xA;The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xA;result = if self.ownedMember -&gt;includes(element)&#xA;then Set{}-&gt;include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport-&gt;select(ei | ei.importedElement = element) in&#xA;  if elementImports-&gt;notEmpty()&#xA;  then elementImports-&gt;collect(el | el.getName())&#xA;  else self.packageImport-&gt;select(pi | pi.importedPackage.visibleMembers()-&gt;includes(element))-&gt; collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//NamedElement" Name="element" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query getNamesOfMember() takes importing into account. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xA;The query getNamesOfMember() gives a set of all of the names that a member would have in a Namespace. In general a member can have multiple names in a Namespace if it is imported more than once with different aliases. The query takes account of importing. It gives back the set of names that an element would have in an importing namespace, either because it is owned, or if not owned then imported individually, or if not individually then from a package.&#xA;result = if self.ownedMember -&gt;includes(element)&#xA;then Set{}-&gt;include(element.name)&#xA;else let elementImports: ElementImport = self.elementImport-&gt;select(ei | ei.importedElement = element) in&#xA;  if elementImports-&gt;notEmpty()&#xA;  then elementImports-&gt;collect(el | el.getName())&#xA;  else self.packageImport-&gt;select(pi | pi.importedPackage.visibleMembers()-&gt;includes(element))-&gt; collect(pi | pi.importedPackage.getNamesOfMember(element))&#xA;  endif&#xA;endif" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//PackageableElement" Name="importMembers" Summary="The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.&#xA;result = self.excludeCollisions(imps)-&gt;select(imp | self.ownedMember-&gt;forAll(mem |&#xA;mem.imp.isDistinguishableFrom(mem, self)))">
      <Parameters IsUnique="true" UpperBound="-1" Type="nmeta:Class #//PackageableElement" Name="imps" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query importMembers() defines which of a set of PackageableElements are actually imported into the namespace. This excludes hidden ones, i.e., those which have names that conflict with names of owned members, and also excludes elements which would have the same name when imported.&#xA;result = self.excludeCollisions(imps)-&gt;select(imp | self.ownedMember-&gt;forAll(mem |&#xA;mem.imp.isDistinguishableFrom(mem, self)))" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="membersAreDistinguishable" Summary="The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.&#xA;result = self.member-&gt;forAll( memb |&#xA;self.member-&gt;excluding(memb)-&gt;forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The Boolean query membersAreDistinguishable() determines whether all of the namespace's members are distinguishable within it.&#xA;result = self.member-&gt;forAll( memb |&#xA;self.member-&gt;excluding(memb)-&gt;forAll(other |&#xA;memb.isDistinguishableFrom(other, self)))" />
      </Extensions>
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A namespace is an element in a model that contains a set of named elements that can be identified by name." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DirectedRelationship" Name="ElementImport" Summary="An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier.">
    <References ReferenceType="nmeta:Class #//PackageableElement" IsUnique="true" LowerBound="1" Name="importedElement" Summary="Specifies the PackageableElement whose name is to be added to a Namespace.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the PackageableElement whose name is to be added to a Namespace." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Namespace/elementImport" ReferenceType="nmeta:Class #//Namespace" IsUnique="true" LowerBound="1" Name="importingNamespace" Summary="Specifies the Namespace that imports a PackageableElement from another Package.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the Namespace that imports a PackageableElement from another Package." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="visibility_public_or_private" Summary="The visibility of an ElementImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The visibility of an ElementImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="imported_element_is_public" Summary="An importedElement has either public visibility or no visibility at all.&#xA;self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An importedElement has either public visibility or no visibility at all.&#xA;self.importedElement.visibility.notEmpty() implies self.importedElement.visibility = #public" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="getName" Summary="The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.&#xA;result = if self.alias-&gt;notEmpty() then&#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query getName() returns the name under which the imported PackageableElement will be known in the importing namespace.&#xA;result = if self.alias-&gt;notEmpty() then&#xA;  self.alias&#xA;else&#xA;  self.importedElement.name&#xA;endif" />
      </Extensions>
    </Operations>
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="alias" Summary="Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the name that should be added to the namespace of the importing package in lieu of the name of the imported packagable element. The aliased name must not clash with any other member name in the importing package. By default, no alias is used." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="public" IsUnique="true" LowerBound="1" Type="nmeta:Enumeration #//VisibilityKind" Name="visibility" Summary="Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the visibility of the imported PackageableElement within the importing Package. The default visibility is the same as that of the imported element. If the imported element does not have a visibility, it is possible to add visibility to the element import." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An element import identifies an element in another package, and allows the element to be referenced using its name without a qualifier." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Relationship" Name="DirectedRelationship" Summary="A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A directed relationship represents a relationship between a collection of source model elements and a collection of target model elements." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Element" Name="Relationship" Summary="Relationship is an abstract concept that specifies some kind of relationship between elements.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Relationship is an abstract concept that specifies some kind of relationship between elements." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//PackageableElement" Name="Constraint" Summary="A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element.">
    <References ReferenceType="nmeta:Class #//Element" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="constrainedElement" Summary="The ordered set of Elements referenced by this Constraint.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The ordered set of Elements referenced by this Constraint." />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" LowerBound="1" Name="specification" Summary="A condition that must be true when evaluated in order for the constraint to be satisfied.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A condition that must be true when evaluated in order for the constraint to be satisfied." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Namespace/ownedRule" ReferenceType="nmeta:Class #//Namespace" IsUnique="true" Name="context" Summary="Specifies the namespace that owns the NamedElement.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the namespace that owns the NamedElement." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="value_specification_boolean" Summary="The value specification for a constraint must evaluate to a Boolean value.&#xA;self.specification().booleanValue().isOclKindOf(Boolean)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The value specification for a constraint must evaluate to a Boolean value.&#xA;self.specification().booleanValue().isOclKindOf(Boolean)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="boolean_value" Summary="The value specification for a constraint must evaluate to a Boolean value.&#xA;true">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The value specification for a constraint must evaluate to a Boolean value.&#xA;true" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="not_apply_to_self" Summary="A constraint cannot be applied to itself.&#xA;not constrainedElement-&gt;includes(self)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A constraint cannot be applied to itself.&#xA;not constrainedElement-&gt;includes(self)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="no_side_effects" Summary="Evaluating the value specification for a constraint must not have side effects.&#xA;true">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Evaluating the value specification for a constraint must not have side effects.&#xA;true" />
      </Extensions>
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A constraint is a condition or restriction expressed in natural language text or in a machine readable language for the purpose of declaring some of the semantics of an element." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//TypedElement #//PackageableElement" Name="ValueSpecification" Summary="A value specification is the specification of a (possibly empty) set of instances, including both objects and data values.">
    <Operations IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="booleanValue" Summary="The query booleanValue() gives a single Boolean value when one can be computed.&#xA;result = Set{}">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query booleanValue() gives a single Boolean value when one can be computed.&#xA;result = Set{}" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="integerValue" Summary="The query integerValue() gives a single Integer value when one can be computed.&#xA;result = Set{}">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query integerValue() gives a single Integer value when one can be computed.&#xA;result = Set{}" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isComputable" Summary="The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xA;result = false">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isComputable() determines whether a value specification can be computed in a model. This operation cannot be fully defined in OCL. A conforming implementation is expected to deliver true for this operation for all value specifications that it can compute, and to compute all of those for which the operation is true. A conforming implementation is expected to be able to compute the value of all literals.&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isNull" Summary="The query isNull() returns true when it can be computed that the value is null.&#xA;result = false">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isNull() returns true when it can be computed that the value is null.&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Double" Name="realValue" Summary="The query realValue() gives a single Real value when one can be computed.&#xA;result = Set{}">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query realValue() gives a single Real value when one can be computed.&#xA;result = Set{}" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="stringValue" Summary="The query stringValue() gives a single String value when one can be computed.&#xA;result = Set{}">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query stringValue() gives a single String value when one can be computed.&#xA;result = Set{}" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Name="unlimitedValue" Summary="The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xA;result = Set{}">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query unlimitedValue() gives a single UnlimitedNatural value when one can be computed.&#xA;result = Set{}" />
      </Extensions>
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A value specification is the specification of a (possibly empty) set of instances, including both objects and data values." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//NamedElement" Name="TypedElement" Summary="A typed element is a kind of named element that represents an element with a type.&#xA;A typed element has a type.">
    <References ReferenceType="nmeta:Class #//Type" IsUnique="true" Name="type" Summary="This information is derived from the return result for this Operation.&#xA;The type of the TypedElement.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=This information is derived from the return result for this Operation.&#xA;The type of the TypedElement." />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A typed element is a kind of named element that represents an element with a type.&#xA;A typed element has a type." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DirectedRelationship" Name="PackageImport" Summary="A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces.">
    <References ReferenceType="nmeta:Class #//Package" IsUnique="true" LowerBound="1" Name="importedPackage" Summary="Specifies the Package whose members are imported into a Namespace.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the Package whose members are imported into a Namespace." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Namespace/packageImport" ReferenceType="nmeta:Class #//Namespace" IsUnique="true" LowerBound="1" Name="importingNamespace" Summary="Specifies the Namespace that imports the members from a Package.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the Namespace that imports the members from a Package." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="public_or_private" Summary="The visibility of a PackageImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The visibility of a PackageImport is either public or private.&#xA;self.visibility = #public or self.visibility = #private" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="public" IsUnique="true" LowerBound="1" Type="nmeta:Enumeration #//VisibilityKind" Name="visibility" Summary="Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the visibility of the imported PackageableElements within the importing Namespace, i.e., whether imported elements will in turn be visible to other packages that use that importingPackage as an importedPackage. If the PackageImport is public, the imported elements will be visible outside the package, while if it is private they will not." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A package import is a relationship that allows the use of unqualified names to refer to package members from other namespaces." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DirectedRelationship" Name="PackageMerge" Summary="A package merge defines how the contents of one package are extended by the contents of another package.">
    <References ReferenceType="nmeta:Class #//Package" IsUnique="true" LowerBound="1" Name="mergedPackage" Summary="References the Package that is to be merged with the receiving package of the PackageMerge.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Package that is to be merged with the receiving package of the PackageMerge." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Package/packageMerge" ReferenceType="nmeta:Class #//Package" IsUnique="true" LowerBound="1" Name="receivingPackage" Summary="References the Package that is being extended with the contents of the merged package of the PackageMerge.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Package that is being extended with the contents of the merged package of the PackageMerge." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A package merge defines how the contents of one package are extended by the contents of another package." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DirectedRelationship" Name="Generalization" Summary="A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier.">
    <References ReferenceType="nmeta:Class #//Classifier" IsUnique="true" LowerBound="1" Name="general" Summary="References the general classifier in the Generalization relationship.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the general classifier in the Generalization relationship." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Classifier/generalization" ReferenceType="nmeta:Class #//Classifier" IsUnique="true" LowerBound="1" Name="specific" Summary="References the specializing classifier in the Generalization relationship.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the specializing classifier in the Generalization relationship." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Attributes DefaultValue="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isSubstitutable" Summary="Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates whether the specific classifier can be used wherever the general classifier can be used. If true, the execution traces of the specific classifier will be a superset of the execution traces of the general classifier." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A generalization is a taxonomic relationship between a more general classifier and a more specific classifier. Each instance of the specific classifier is also an indirect instance of the general classifier. Thus, the specific classifier inherits the features of the more general classifier." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//BehavioralFeature" Name="Operation" Summary="An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//Constraint" Refines="#//Namespace/ownedRule" IsOrdered="true" IsUnique="true" Name="bodyCondition" Summary="An optional Constraint on the result values of an invocation of this Operation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An optional Constraint on the result values of an invocation of this Operation." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//DataType/ownedOperation" ReferenceType="nmeta:Class #//DataType" IsUnique="true" Name="datatype" Summary="The DataType that owns this Operation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The DataType that owns this Operation." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//Constraint" Refines="#//Namespace/ownedRule" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="postcondition" Summary="An optional set of Constraints specifying the state of the system when the Operation is completed.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An optional set of Constraints specifying the state of the system when the Operation is completed." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//Constraint" Refines="#//Namespace/ownedRule" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="precondition" Summary="An optional set of Constraints on the state of the system when the Operation is invoked.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An optional set of Constraints on the state of the system when the Operation is invoked." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Operation" IsUnique="true" UpperBound="-1" Name="redefinedOperation" Summary="References the Operations that are redefined by this Operation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Operations that are redefined by this Operation." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Class/ownedOperation" ReferenceType="nmeta:Class #//Class" IsUnique="true" Name="class" Summary="The class that owns the operation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The class that owns the operation." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="only_body_for_query" Summary="A bodyCondition can only be specified for a query operation.&#xA;bodyCondition-&gt;notEmpty() implies isQuery">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A bodyCondition can only be specified for a query operation.&#xA;bodyCondition-&gt;notEmpty() implies isQuery" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="at_most_one_return" Summary="An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'&#xA;self.ownedParameter-&gt;select(par | par.direction = #return)-&gt;size() &lt;= 1">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An operation can have at most one return parameter; i.e., an owned parameter with the direction set to 'return'&#xA;self.ownedParameter-&gt;select(par | par.direction = #return)-&gt;size() &lt;= 1" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Parameter" Name="returnResult" Summary="The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set&#xA;result = ownedParameter-&gt;select (par | par.direction = #return)">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query returnResult() returns the set containing the return parameter of the Operation if one exists, otherwise, it returns an empty set&#xA;result = ownedParameter-&gt;select (par | par.direction = #return)" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isQuery" Summary="Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false).">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies whether an execution of the BehavioralFeature leaves the state of the system unchanged (isQuery=true) or whether side effects may occur (isQuery=false)." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An operation is a behavioral feature of a classifier that specifies the name, type, parameters, and constraints for invoking an associated behavior." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Namespace #//Feature" Name="BehavioralFeature" Summary="A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//Parameter" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedParameter" Summary="Specifies the ordered set of formal parameters of this BehavioralFeature.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the ordered set of formal parameters of this BehavioralFeature." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Type" IsUnique="true" UpperBound="-1" Name="raisedException" Summary="References the Types representing exceptions that may be raised during an invocation of this feature.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Types representing exceptions that may be raised during an invocation of this feature." />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A behavioral feature is a feature of a classifier that specifies an aspect of the behavior of its instances." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//MultiplicityElement #//TypedElement" Name="Parameter" Summary="A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" Name="defaultValue" Summary="Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies a ValueSpecification that represents a value to be used when no argument is supplied for the Parameter." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References ReferenceType="nmeta:Class #//Operation" IsUnique="true" Name="operation" Summary="References the Operation owning this parameter.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=References the Operation owning this parameter." />
      </Extensions>
    </References>
    <Attributes DefaultValue="in" IsUnique="true" LowerBound="1" Type="nmeta:Enumeration #//ParameterDirectionKind" Name="direction" Summary="Indicates whether a parameter is being sent into or out of a behavioral element.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates whether a parameter is being sent into or out of a behavioral element." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A parameter is a specification of an argument used to pass information into or out of an invocation of a behavioral feature." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//Element" Name="MultiplicityElement" Summary="A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" Name="lowerValue" Summary="The specification of the lower bound for this multiplicity.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specification of the lower bound for this multiplicity." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" Name="upperValue" Summary="The specification of the upper bound for this multiplicity.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specification of the upper bound for this multiplicity." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="lower_ge_0" Summary="The lower bound must be a non-negative integer literal.&#xA;lowerBound()-&gt;notEmpty() implies lowerBound() &gt;= 0">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The lower bound must be a non-negative integer literal.&#xA;lowerBound()-&gt;notEmpty() implies lowerBound() &gt;= 0" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="value_specification_no_side_effects" Summary="If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have side effects.&#xA;true">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If a non-literal ValueSpecification is used for the lower or upper bound, then evaluating that specification must not have side effects.&#xA;true" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="upper_ge_lower" Summary="The upper bound must be greater than or equal to the lower bound.&#xA;(upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()) implies upperBound() &gt;= lowerBound()">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The upper bound must be greater than or equal to the lower bound.&#xA;(upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()) implies upperBound() &gt;= lowerBound()" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="value_specification_constant" Summary="If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant expression.&#xA;true">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If a non-literal ValueSpecification is used for the lower or upper bound, then that specification must be a constant expression.&#xA;true" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="includesCardinality" Summary="The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xA;result = (lowerBound() &lt;= C) and (upperBound() &gt;= C)&#xA;upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="C" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query includesCardinality() checks whether the specified cardinality is valid for this multiplicity.&#xA;result = (lowerBound() &lt;= C) and (upperBound() &gt;= C)&#xA;upperBound()-&gt;notEmpty() and lowerBound()-&gt;notEmpty()" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="includesMultiplicity" Summary="The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() &gt;= M.upperBound())&#xA;self.upperBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty() and M.upperBound()-&gt;notEmpty() and M.lowerBound()-&gt;notEmpty()">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//MultiplicityElement" Name="M" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query includesMultiplicity() checks whether this multiplicity includes all the cardinalities allowed by the specified multiplicity.&#xA;result = (self.lowerBound() &lt;= M.lowerBound()) and (self.upperBound() &gt;= M.upperBound())&#xA;self.upperBound()-&gt;notEmpty() and self.lowerBound()-&gt;notEmpty() and M.upperBound()-&gt;notEmpty() and M.lowerBound()-&gt;notEmpty()" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isMultivalued" Summary="The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xA;upperBound()-&gt;notEmpty()&#xA;result = upperBound() &gt; 1">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isMultivalued() checks whether this multiplicity has an upper bound greater than one.&#xA;upperBound()-&gt;notEmpty()&#xA;result = upperBound() &gt; 1" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="lowerBound" Summary="The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lowerValue-&gt;isEmpty() then 1 else lowerValue.integerValue() endif">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query lowerBound() returns the lower bound of the multiplicity as an integer.&#xA;result = if lowerValue-&gt;isEmpty() then 1 else lowerValue.integerValue() endif" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" Name="upperBound" Summary="The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xA;result = if upperValue-&gt;isEmpty() then 1 else upperValue.unlimitedValue() endif">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query upperBound() returns the upper bound of the multiplicity for a bounded multiplicity as an unlimited natural.&#xA;result = if upperValue-&gt;isEmpty() then 1 else upperValue.unlimitedValue() endif" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isOrdered" Summary="For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=For a multivalued multiplicity, this attribute specifies whether the values in an instantiation of this element are sequentially ordered." />
      </Extensions>
    </Attributes>
    <Attributes DefaultValue="true" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isUnique" Summary="For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=For a multivalued multiplicity, this attributes specifies whether the values in an instantiation of this element are unique." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A multiplicity is a definition of an inclusive interval of non-negative integers beginning with a lower bound and ending with a (possibly infinite) upper bound. A multiplicity element embeds this information to specify the allowable cardinalities for an instantiation of this element." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Enumeration" Name="ParameterDirectionKind" Summary="Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters.">
    <Literals Name="in" Summary="Indicates that parameter values are passed into the behavioral element by the caller.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that parameter values are passed into the behavioral element by the caller." />
      </Extensions>
    </Literals>
    <Literals Value="1" Name="inout" Summary="Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element." />
      </Extensions>
    </Literals>
    <Literals Value="2" Name="out" Summary="Indicates that parameter values are passed from a behavioral element out to the caller.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that parameter values are passed from a behavioral element out to the caller." />
      </Extensions>
    </Literals>
    <Literals Value="3" Name="return" Summary="Indicates that parameter values are passed as return values from a behavioral element back to the caller.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that parameter values are passed as return values from a behavioral element back to the caller." />
      </Extensions>
    </Literals>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Parameter direction kind is an enumeration type that defines literals used to specify direction of parameters." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Classifier" Name="DataType" Summary="A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types.">
    <References IsContainment="true" Opposite="#//Property/datatype" ReferenceType="nmeta:Class #//Property" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedAttribute" Summary="The Attributes owned by the DataType.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The Attributes owned by the DataType." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Operation/datatype" ReferenceType="nmeta:Class #//Operation" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedOperation" Summary="The Operations owned by the DataType.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The Operations owned by the DataType." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A data type is a type whose instances are identified only by their value. A data type may contain attributes to support the modeling of structured data types." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Enumeration" Name="AggregationKind" Summary="AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property.">
    <Literals Name="none" Summary="Indicates that the property has no aggregation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that the property has no aggregation." />
      </Extensions>
    </Literals>
    <Literals Value="1" Name="shared" Summary="Indicates that the property has a shared aggregation.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that the property has a shared aggregation." />
      </Extensions>
    </Literals>
    <Literals Value="2" Name="composite" Summary="Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts).">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Indicates that the property is aggregated compositely, i.e., the composite object has responsibility for the existence and storage of the composed objects (parts)." />
      </Extensions>
    </Literals>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=AggregationKind is an enumeration type that specifies the literals for defining the kind of aggregation of a property." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Classifier #//Relationship" Name="Association" Summary="An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.A link is a tuple with one value for each end of the association, where each value is an instance of the type of the end.&#xA;An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link. A link is a tuple with one value for each end of the association, where each value is an instance of the type of the end.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//Property" Refines="#//Association/ownedEnd" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="navigableOwnedEnd" Summary="The navigable ends that are owned by the association itself.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The navigable ends that are owned by the association itself." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Property/owningAssociation" ReferenceType="nmeta:Class #//Property" Refines="#//Association/memberEnd" IsOrdered="true" UpperBound="-1" Name="ownedEnd" Summary="The ends that are owned by the association itself.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The ends that are owned by the association itself." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//Property/association" ReferenceType="nmeta:Class #//Property" IsOrdered="true" LowerBound="2" UpperBound="-1" Name="memberEnd" Summary="Each end represents participation of instances of the classifier connected to the end in links of the association.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Each end represents participation of instances of the classifier connected to the end in links of the association." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="binary_associations" Summary="Only binary associations can be aggregations.&#xA;self.memberEnd-&gt;exists(aggregation &lt;&gt; Aggregation::none) implies self.memberEnd-&gt;size() = 2">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Only binary associations can be aggregations.&#xA;self.memberEnd-&gt;exists(aggregation &lt;&gt; Aggregation::none) implies self.memberEnd-&gt;size() = 2" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="specialized_end_number" Summary="An association specializing another association has the same number of ends as the other association.&#xA;parents()-&gt;select(oclIsKindOf(Association)).oclAsType(Association)-&gt;forAll(p | p.memberEnd-&gt;size() = self.memberEnd-&gt;size())">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An association specializing another association has the same number of ends as the other association.&#xA;parents()-&gt;select(oclIsKindOf(Association)).oclAsType(Association)-&gt;forAll(p | p.memberEnd-&gt;size() = self.memberEnd-&gt;size())" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="association_ends" Summary="Association ends of associations with more than two ends must be owned by the association.&#xA;if memberEnd-&gt;size() &gt; 2 then ownedEnd-&gt;includesAll(memberEnd)">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Association ends of associations with more than two ends must be owned by the association.&#xA;if memberEnd-&gt;size() &gt; 2 then ownedEnd-&gt;includesAll(memberEnd)" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="specialized_end_types" Summary="When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.&#xA;Sequence{1..self.memberEnd-&gt;size()}-&gt;&#xA;&#x9;forAll(i | self.general-&gt;select(oclIsKindOf(Association)).oclAsType(Association)-&gt;&#xA;&#x9;&#x9;forAll(ga |self.memberEnd-&gt;at(i).type.conformsTo(ga.memberEnd-&gt;at(i).type)))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=When an association specializes another association, every end of the specific association corresponds to an end of the general association, and the specific end reaches the same type or a subtype of the more general end.&#xA;Sequence{1..self.memberEnd-&gt;size()}-&gt;&#xA;&#x9;forAll(i | self.general-&gt;select(oclIsKindOf(Association)).oclAsType(Association)-&gt;&#xA;&#x9;&#x9;forAll(ga |self.memberEnd-&gt;at(i).type.conformsTo(ga.memberEnd-&gt;at(i).type)))" />
      </Extensions>
    </Operations>
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isDerived" Summary="Specifies whether the association is derived from other model elements such as other associations or constraints.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies whether the association is derived from other model elements such as other associations or constraints." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link.A link is a tuple with one value for each end of the association, where each value is an instance of the type of the end.&#xA;An association describes a set of tuples whose values refer to typed instances. An instance of an association is called a link. A link is a tuple with one value for each end of the association, where each value is an instance of the type of the end." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IdentifierScope="Local" Identifier="#//Argument/name" Name="Argument">
    <References ReferenceType="nmeta:Class #//Object" IsUnique="true" LowerBound="1" Name="value" />
    <Attributes IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="name" />
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DataType" Name="Enumeration" Summary="An enumeration is a data type whose values are enumerated in the model as enumeration literals.">
    <References IsContainment="true" Opposite="#//EnumerationLiteral/enumeration" ReferenceType="nmeta:Class #//EnumerationLiteral" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="ownedLiteral" Summary="The ordered set of literals for this Enumeration.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The ordered set of literals for this Enumeration." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An enumeration is a data type whose values are enumerated in the model as enumeration literals." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//InstanceSpecification" Name="EnumerationLiteral" Summary="An enumeration literal is a user-defined data value for an enumeration.">
    <References Opposite="#//Enumeration/ownedLiteral" ReferenceType="nmeta:Class #//Enumeration" IsUnique="true" Name="enumeration" Summary="The Enumeration that this EnumerationLiteral is a member of.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The Enumeration that this EnumerationLiteral is a member of." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="classifier_equals_owning_enumeration" Summary="classifier = enumeration">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=classifier = enumeration" />
      </Extensions>
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An enumeration literal is a user-defined data value for an enumeration." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//PackageableElement" Name="InstanceSpecification" Summary="An instance specification is a model element that represents an instance in a modeled system.">
    <References ReferenceType="nmeta:Class #//Classifier" IsUnique="true" UpperBound="-1" Name="classifier" Summary="The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The classifier or classifiers of the represented instance. If multiple classifiers are specified, the instance is classified by all of them." />
      </Extensions>
    </References>
    <References IsContainment="true" Opposite="#//Slot/owningInstance" ReferenceType="nmeta:Class #//Slot" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="slot" Summary="A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A slot giving the value or values of a structural feature of the instance. An instance specification can have one slot per structural feature of its classifiers, including inherited features. It is not necessary to model a slot for each structural feature, in which case the instance specification is a partial description." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" Name="specification" Summary="A specification of how to compute, derive, or construct the instance.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A specification of how to compute, derive, or construct the instance." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="structural_feature" Summary="One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification.&#xA;classifier-&gt;forAll(c | (c.allFeatures()-&gt;forAll(f | slot-&gt;select(s | s.definingFeature = f)-&gt;size() &lt;= 1)))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=One structural feature (including the same feature inherited from multiple classifiers) is the defining feature of at most one slot in an instance specification.&#xA;classifier-&gt;forAll(c | (c.allFeatures()-&gt;forAll(f | slot-&gt;select(s | s.definingFeature = f)-&gt;size() &lt;= 1)))" />
      </Extensions>
    </Operations>
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="defining_feature" Summary="The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification.&#xA;slot-&gt;forAll(s | classifier-&gt;exists (c | c.allFeatures()-&gt;includes (s.definingFeature)))">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The defining feature of each slot is a structural feature (directly or inherited) of a classifier of the instance specification.&#xA;slot-&gt;forAll(s | classifier-&gt;exists (c | c.allFeatures()-&gt;includes (s.definingFeature)))" />
      </Extensions>
    </Operations>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An instance specification is a model element that represents an instance in a modeled system." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Element" Name="Slot" Summary="A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature.">
    <References ReferenceType="nmeta:Class #//StructuralFeature" IsUnique="true" LowerBound="1" Name="definingFeature" Summary="The structural feature that specifies the values that may be held by the slot.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The structural feature that specifies the values that may be held by the slot." />
      </Extensions>
    </References>
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="value" Summary="The value or values corresponding to the defining feature for the owning instance specification.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The value or values corresponding to the defining feature for the owning instance specification." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <References Opposite="#//InstanceSpecification/slot" ReferenceType="nmeta:Class #//InstanceSpecification" IsUnique="true" LowerBound="1" Name="owningInstance" Summary="The instance specification that owns this slot.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The instance specification that owns this slot." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A slot specifies that an entity modeled by an instance specification has a value or values for a specific structural feature." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//ValueSpecification" Name="Expression" Summary="An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.&#xA;An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications.">
    <References IsContainment="true" ReferenceType="nmeta:Class #//ValueSpecification" IsOrdered="true" IsUnique="true" UpperBound="-1" Name="operand" Summary="Specifies a sequence of operands.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies a sequence of operands." />
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="symbol" Summary="The symbol associated with the node in the expression tree.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The symbol associated with the node in the expression tree." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An expression is a structured tree of symbols that denotes a (possibly empty) set of values when evaluated in a context.&#xA;An expression represents a node in an expression tree, which may be non-terminal or terminal. It defines a symbol, and has a possibly empty sequence of operands which are value specifications." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//ValueSpecification" Name="InstanceValue" Summary="An instance value is a value specification that identifies an instance.">
    <References ReferenceType="nmeta:Class #//InstanceSpecification" IsUnique="true" LowerBound="1" Name="instance" Summary="The instance that is the specified value.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The instance that is the specified value." />
      </Extensions>
    </References>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An instance value is a value specification that identifies an instance." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralBoolean" Summary="A literal Boolean is a specification of a Boolean value.">
    <Attributes DefaultValue="false" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="value" Summary="The specified Boolean value.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specified Boolean value." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal Boolean is a specification of a Boolean value." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" IsAbstract="true" BaseTypes="#//ValueSpecification" Name="LiteralSpecification" Summary="A literal specification identifies a literal constant being modeled.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal specification identifies a literal constant being modeled." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralInteger" Summary="A literal integer is a specification of an integer value.">
    <Attributes DefaultValue="0" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="value" Summary="The specified Integer value.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specified Integer value." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal integer is a specification of an integer value." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralNull" Summary="A literal null specifies the lack of a value.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal null specifies the lack of a value." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralReal" Summary="A literal real is a specification of a real value.">
    <Attributes IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Double" Name="value" />
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal real is a specification of a real value." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralString" Summary="A literal string is a specification of a string value.">
    <Attributes IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="value" Summary="The specified String value.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specified String value." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal string is a specification of a string value." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//LiteralSpecification" Name="LiteralUnlimitedNatural" Summary="A literal unlimited natural is a specification of an unlimited natural number.">
    <Attributes DefaultValue="0" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Object" Name="value" Summary="The specified UnlimitedNatural value.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The specified UnlimitedNatural value." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A literal unlimited natural is a specification of an unlimited natural number." />
      <Annotations Source="duplicates" />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//ValueSpecification" Name="OpaqueExpression" Summary="An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context.">
    <Operations IsOrdered="true" IsUnique="true" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="language_body_size" Summary="If the language attribute is not empty, then the size of the body and language arrays must be the same.&#xA;language-&gt;notEmpty() implies (body-&gt;size() = language-&gt;size())">
      <Parameters IsOrdered="true" IsUnique="true" Name="diagnostics" Summary="The chain of diagnostics to which problems are to be appended.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The chain of diagnostics to which problems are to be appended." />
        </Extensions>
      </Parameters>
      <Parameters IsOrdered="true" IsUnique="true" Name="context" Summary="The cache of context-specific information.">
        <Extensions xsi:type="nmeta:AnnotationSet">
          <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The cache of context-specific information." />
        </Extensions>
      </Parameters>
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=If the language attribute is not empty, then the size of the body and language arrays must be the same.&#xA;language-&gt;notEmpty() implies (body-&gt;size() = language-&gt;size())" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isIntegral" Summary="The query isIntegral() tells whether an expression is intended to produce an integer.&#xA;result = false">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isIntegral() tells whether an expression is intended to produce an integer.&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isNonNegative" Summary="The query isNonNegative() tells whether an integer expression has a non-negative value.&#xA;self.isIntegral()&#xA;result = false">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isNonNegative() tells whether an integer expression has a non-negative value.&#xA;self.isIntegral()&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="isPositive" Summary="The query isPositive() tells whether an integer expression has a positive value.&#xA;self.isIntegral()&#xA;result = false">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query isPositive() tells whether an integer expression has a positive value.&#xA;self.isIntegral()&#xA;result = false" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Integer" Name="value" Summary="The query value() gives an integer value for an expression intended to produce one.&#xA;true&#xA;self.isIntegral()">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The query value() gives an integer value for an expression intended to produce one.&#xA;true&#xA;self.isIntegral()" />
      </Extensions>
    </Operations>
    <Attributes IsOrdered="true" UpperBound="-1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="body" Summary="The text of the expression, possibly in multiple languages.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=The text of the expression, possibly in multiple languages." />
      </Extensions>
    </Attributes>
    <Attributes IsOrdered="true" IsUnique="true" UpperBound="-1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="language" Summary="Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order.">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=Specifies the languages in which the expression is stated. The interpretation of the expression body depends on the languages. If the languages are unspecified, they might be implicit from the expression body or the context. Languages are matched to body strings by order." />
      </Extensions>
    </Attributes>
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=An opaque expression is an uninterpreted textual statement that denotes a (possibly empty) set of values when evaluated in a context." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//DataType" Name="PrimitiveType" Summary="A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically.">
    <Extensions xsi:type="nmeta:AnnotationSet">
      <Annotations Source="http://www.eclipse.org/emf/2002/GenModel" Details="documentation=A primitive type defines a predefined data type, without any relevant substructure (i.e., it has no parts in the context of UML). A primitive datatype may have an algebra and operations defined outside of UML, for example, mathematically." />
    </Extensions>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Extent" Name="URIExtent">
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="contextURI" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="uri">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="object" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="element">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="uri" />
    </Operations>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Object" Name="Extent">
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="useContainment" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//ReflectiveSequence" Name="elements" />
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Element" Name="elementsOfType">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Class" Name="type" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="includesSubtypes" />
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Link" Name="linksOfType">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Association" Name="type" />
    </Operations>
    <Operations IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Element" Name="linkedElements">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Association" Name="association" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="endElement" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="end1ToEnd2Direction" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="linkExists">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Association" Name="association" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="firstElement" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="secondElement" />
    </Operations>
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Object" Name="Link">
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" LowerBound="1" Name="firstElement" />
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" LowerBound="1" Name="secondElement" />
    <References ReferenceType="nmeta:Class #//Association" IsUnique="true" LowerBound="1" Name="association" />
    <Operations Refines="#//Object/equals" IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//Boolean" Name="equals">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Link" Name="otherLink" />
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="redefines" />
      </Extensions>
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Name="delete" />
  </Types>
  <Types xsi:type="nmeta:Class" BaseTypes="#//Element" Name="Factory">
    <References ReferenceType="nmeta:Class #//Package" IsUnique="true" LowerBound="1" Name="package" />
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="createFromString">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//DataType" Name="dataType" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="string" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="convertToString">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//DataType" Name="dataType" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Object" Name="object" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="create">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Class" Name="metaClass" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="createElement">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Class" Name="class" />
      <Parameters IsUnique="true" UpperBound="-1" Type="nmeta:Class #//Argument" Name="arguments" />
    </Operations>
    <Operations IsUnique="true" LowerBound="1" Type="nmeta:Class #//Link" Name="createLink">
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Association" Name="association" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="firstElement" />
      <Parameters IsUnique="true" LowerBound="1" Type="nmeta:Class #//Element" Name="secondElement" />
    </Operations>
  </Types>
  <Types xsi:type="nmeta:Class" Name="Exception">
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" LowerBound="1" Name="objectInError" />
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" LowerBound="1" Name="elementInError" />
    <Attributes IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="description" />
  </Types>
  <Types xsi:type="nmeta:Class" IdentifierScope="Local" BaseTypes="#//Element" Identifier="#//Tag/name" Name="Tag">
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" UpperBound="-1" Name="element" />
    <References ReferenceType="nmeta:Class #//Element" IsUnique="true" Name="tagOwner">
      <Extensions xsi:type="nmeta:AnnotationSet">
        <Annotations Source="subsets" />
      </Extensions>
    </References>
    <Attributes IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="name" />
    <Attributes IsUnique="true" LowerBound="1" Type="nmeta:PrimitiveType http://nmf.codeplex.com/nmeta/#//String" Name="value" />
  </Types>
</nmeta:Namespace>