//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Legacy.Cmof
{
    
    
    /// <summary>
    /// ParameterDirectionKind is an enumeration of the following literal values:
    ///
    ///  - in Indicates that parameter values are passed into the behavioral element by the caller.
    ///
    ///  - inout Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.
    ///
    ///  - out Indicates that parameter values are passed from a behavioral element out to the caller.
    ///
    ///  - return Indicates that parameter values are passed as return values from a behavioral element back to the caller.
    ///
    ///
    /// </summary>
    [TypeConverterAttribute(typeof(ParameterDirectionKindConverter))]
    [ModelRepresentationClassAttribute("http://schema.omg.org/spec/MOF/2.0/cmof.xml#//ParameterDirectionKind")]
    public enum ParameterDirectionKind
    {
        
        /// <summary>
        ///Indicates that parameter values are passed into the behavioral element by the caller.
        ///</summary>
        In = 0,
        
        /// <summary>
        ///Indicates that parameter values are passed into a behavioral element by the caller and then back out to the caller from the behavioral element.
        ///</summary>
        Inout = 1,
        
        /// <summary>
        ///Indicates that parameter values are passed from a behavioral element out to the caller.
        ///</summary>
        Out = 2,
        
        /// <summary>
        ///Indicates that parameter values are passed as return values from a behavioral element back to the caller.
        ///</summary>
        Return = 3,
    }
}

