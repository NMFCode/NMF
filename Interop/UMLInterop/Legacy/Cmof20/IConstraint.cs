//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Legacy.Cmof
{
    
    
    /// <summary>
    /// The public interface for Constraint
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Constraint))]
    [XmlDefaultImplementationTypeAttribute(typeof(Constraint))]
    [ModelRepresentationClassAttribute("http://schema.omg.org/spec/MOF/2.0/cmof.xml#//Constraint")]
    public interface IConstraint : IModelElement, IPackageableElement
    {
        
        /// <summary>
        /// The ordered set of Elements referenced by this Constraint.
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("constrainedElement")]
        [DescriptionAttribute("The ordered set of Elements referenced by this Constraint.")]
        [CategoryAttribute("Constraint")]
        [XmlElementNameAttribute("constrainedElement")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        IOrderedSetExpression<IElement> ConstrainedElement
        {
            get;
        }
        
        /// <summary>
        /// A condition that must be true when evaluated in order for the constraint to be satisfied. Subsets Element::ownedElement.
        ///
        ///
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("specification")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IValueSpecification Specification
        {
            get;
            set;
        }
        
        /// <summary>
        /// The namespace property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("namespace")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("ownedRule")]
        NMF.Interop.Legacy.Cmof.INamespace Namespace
        {
            get;
            set;
        }
        
        /// <summary>
        /// Gets fired before the operation not_apply_to_self gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> Not_apply_to_selfCalling;
        
        /// <summary>
        /// Gets fired after the operation not_apply_to_self got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> Not_apply_to_selfCalled;
        
        /// <summary>
        /// Gets fired before the operation value_specification_boolean gets called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> Value_specification_booleanCalling;
        
        /// <summary>
        /// Gets fired after the operation value_specification_boolean got called
        /// </summary>
        event System.EventHandler<OperationCallEventArgs> Value_specification_booleanCalled;
        
        /// <summary>
        /// Gets fired before the Specification property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SpecificationChanging;
        
        /// <summary>
        /// Gets fired when the Specification property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> SpecificationChanged;
        
        /// <summary>
        /// Gets fired before the Namespace property changes its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NamespaceChanging;
        
        /// <summary>
        /// Gets fired when the Namespace property changed its value
        /// </summary>
        event System.EventHandler<ValueChangedEventArgs> NamespaceChanged;
        
        /// <summary>
        /// A constraint cannot be applied to itself.
        ///not constrainedElement->includes(self)
        /// </summary>
        /// <param name="diagnostics"></param>
        /// <param name="context"></param>
        bool Not_apply_to_self(object diagnostics, object context);
        
        /// <summary>
        /// The value specification for a constraint must evaluate to a boolean value.
        ///self.specification().booleanValue().isOclKindOf(Boolean)
        /// </summary>
        /// <param name="diagnostics"></param>
        /// <param name="context"></param>
        bool Value_specification_boolean(object diagnostics, object context);
    }
}

