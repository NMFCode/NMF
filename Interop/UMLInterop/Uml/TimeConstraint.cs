//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// A TimeConstraint is a Constraint that refers to a TimeInterval.
    ///<p>From package UML::Values.</p>
    /// </summary>
    [XmlNamespaceAttribute("http://www.eclipse.org/uml2/5.0.0/UML")]
    [XmlNamespacePrefixAttribute("uml")]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//TimeConstraint")]
    [DebuggerDisplayAttribute("TimeConstraint {Name}")]
    public partial class TimeConstraint : IntervalConstraint, ITimeConstraint, IModelElement
    {
        
        private static System.Lazy<NMF.Models.Meta.IOperation> _has_one_constrainedElementOperation = new System.Lazy<NMF.Models.Meta.IOperation>(RetrieveHas_one_constrainedElementOperation);
        
        /// <summary>
        /// The backing field for the FirstEvent property
        /// </summary>
        [DebuggerBrowsableAttribute(DebuggerBrowsableState.Never)]
        private Nullable<bool> _firstEvent = true;
        
        private static Lazy<NMF.Models.Meta.ITypedElement> _firstEventAttribute = new Lazy<NMF.Models.Meta.ITypedElement>(RetrieveFirstEventAttribute);
        
        private static NMF.Models.Meta.IClass _classInstance;
        
        /// <summary>
        /// The value of firstEvent is related to the constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within the constrainedElement.
        ///<p>From package UML::Values.</p>
        /// </summary>
        [DefaultValueAttribute(true)]
        [DisplayNameAttribute("firstEvent")]
        [DescriptionAttribute(@"The value of firstEvent is related to the constrainedElement. If firstEvent is true, then the corresponding observation event is the first time instant the execution enters the constrainedElement. If firstEvent is false, then the corresponding observation event is the last time instant the execution is within the constrainedElement.
<p>From package UML::Values.</p>")]
        [CategoryAttribute("TimeConstraint")]
        [XmlElementNameAttribute("firstEvent")]
        [XmlAttributeAttribute(true)]
        public Nullable<bool> FirstEvent
        {
            get
            {
                return this._firstEvent;
            }
            set
            {
                if ((this._firstEvent != value))
                {
                    Nullable<bool> old = this._firstEvent;
                    ValueChangedEventArgs e = new ValueChangedEventArgs(old, value);
                    this.OnPropertyChanging("FirstEvent", e, _firstEventAttribute);
                    this._firstEvent = value;
                    this.OnPropertyChanged("FirstEvent", e, _firstEventAttribute);
                }
            }
        }
        
        /// <summary>
        /// Gets the Class model for this type
        /// </summary>
        public new static NMF.Models.Meta.IClass ClassInstance
        {
            get
            {
                if ((_classInstance == null))
                {
                    _classInstance = ((NMF.Models.Meta.IClass)(MetaRepository.Instance.Resolve("http://www.eclipse.org/uml2/5.0.0/UML#//TimeConstraint")));
                }
                return _classInstance;
            }
        }
        
        /// <summary>
        /// A TimeConstraint has one constrainedElement.
        ///constrainedElement->size() = 1
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        public bool Has_one_constrainedElement(object diagnostics, object context)
        {
            System.Func<ITimeConstraint, object, object, bool> handler = OperationBroker.Instance.GetRegisteredDelegate<System.Func<ITimeConstraint, object, object, bool>>(_has_one_constrainedElementOperation);
            if ((handler != null))
            {
            }
            else
            {
                throw new System.InvalidOperationException("There is no implementation for method has_one_constrainedElement registered. Use " +
                        "the method broker to register a method implementation.");
            }
            OperationCallEventArgs e = new OperationCallEventArgs(this, _has_one_constrainedElementOperation.Value, diagnostics, context);
            this.OnBubbledChange(BubbledChangeEventArgs.OperationCalling(this, _has_one_constrainedElementOperation.Value, e));
            bool result = handler.Invoke(this, diagnostics, context);
            e.Result = result;
            this.OnBubbledChange(BubbledChangeEventArgs.OperationCalled(this, _has_one_constrainedElementOperation.Value, e));
            return result;
        }
        
        private static NMF.Models.Meta.IOperation RetrieveHas_one_constrainedElementOperation()
        {
            return ClassInstance.LookupOperation("has_one_constrainedElement");
        }
        
        private static NMF.Models.Meta.ITypedElement RetrieveFirstEventAttribute()
        {
            return ((NMF.Models.Meta.ITypedElement)(((ModelElement)(NMF.Interop.Uml.TimeConstraint.ClassInstance)).Resolve("firstEvent")));
        }
        
        /// <summary>
        /// Resolves the given attribute name
        /// </summary>
        /// <returns>The attribute value or null if it could not be found</returns>
        /// <param name="attribute">The requested attribute name</param>
        /// <param name="index">The index of this attribute</param>
        protected override object GetAttributeValue(string attribute, int index)
        {
            if ((attribute == "FIRSTEVENT"))
            {
                return this.FirstEvent;
            }
            return base.GetAttributeValue(attribute, index);
        }
        
        /// <summary>
        /// Sets a value to the given feature
        /// </summary>
        /// <param name="feature">The requested feature</param>
        /// <param name="value">The value that should be set to that feature</param>
        protected override void SetFeature(string feature, object value)
        {
            if ((feature == "FIRSTEVENT"))
            {
                this.FirstEvent = ((bool)(value));
                return;
            }
            base.SetFeature(feature, value);
        }
        
        /// <summary>
        /// Gets the property expression for the given attribute
        /// </summary>
        /// <returns>An incremental property expression</returns>
        /// <param name="attribute">The requested attribute in upper case</param>
        protected override NMF.Expressions.INotifyExpression<object> GetExpressionForAttribute(string attribute)
        {
            if ((attribute == "FIRSTEVENT"))
            {
                return Observable.Box(new FirstEventProxy(this));
            }
            return base.GetExpressionForAttribute(attribute);
        }
        
        /// <summary>
        /// Gets the Class for this model element
        /// </summary>
        public override NMF.Models.Meta.IClass GetClass()
        {
            if ((_classInstance == null))
            {
                _classInstance = ((NMF.Models.Meta.IClass)(MetaRepository.Instance.Resolve("http://www.eclipse.org/uml2/5.0.0/UML#//TimeConstraint")));
            }
            return _classInstance;
        }
        
        /// <summary>
        /// Represents a proxy to represent an incremental access to the firstEvent property
        /// </summary>
        private sealed class FirstEventProxy : ModelPropertyChange<ITimeConstraint, Nullable<bool>>
        {
            
            /// <summary>
            /// Creates a new observable property access proxy
            /// </summary>
            /// <param name="modelElement">The model instance element for which to create the property access proxy</param>
            public FirstEventProxy(ITimeConstraint modelElement) : 
                    base(modelElement, "firstEvent")
            {
            }
            
            /// <summary>
            /// Gets or sets the value of this expression
            /// </summary>
            public override Nullable<bool> Value
            {
                get
                {
                    return this.ModelElement.FirstEvent;
                }
                set
                {
                    this.ModelElement.FirstEvent = value;
                }
            }
        }
    }
}

