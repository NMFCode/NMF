//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for RedefinableTemplateSignature
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(RedefinableTemplateSignature))]
    [XmlDefaultImplementationTypeAttribute(typeof(RedefinableTemplateSignature))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//RedefinableTemplateSignature")]
    public interface IRedefinableTemplateSignature : IModelElement, ITemplateSignature, IRedefinableElement
    {
        
        /// <summary>
        /// The signatures extended by this RedefinableTemplateSignature.
        ///<p>From package UML::Classification.</p>
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("extendedSignature")]
        [DescriptionAttribute("The signatures extended by this RedefinableTemplateSignature.\n<p>From package UML" +
            "::Classification.</p>")]
        [CategoryAttribute("RedefinableTemplateSignature")]
        [XmlElementNameAttribute("extendedSignature")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        ISetExpression<IRedefinableTemplateSignature> ExtendedSignature
        {
            get;
        }
        
        /// <summary>
        /// The Classifier that owns this RedefinableTemplateSignature.
        ///<p>From package UML::Classification.</p>
        /// </summary>
        [DisplayNameAttribute("classifier")]
        [DescriptionAttribute("The Classifier that owns this RedefinableTemplateSignature.\n<p>From package UML::" +
            "Classification.</p>")]
        [CategoryAttribute("RedefinableTemplateSignature")]
        [XmlElementNameAttribute("classifier")]
        [XmlAttributeAttribute(true)]
        IClassifier Classifier
        {
            get;
            set;
        }
        
        /// <summary>
        /// If any of the parent Classifiers are a template, then the extendedSignature must include the signature of that Classifier.
        ///classifier.allParents()->forAll(c | c.ownedTemplateSignature->notEmpty() implies self->closure(extendedSignature)->includes(c.ownedTemplateSignature))
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Redefines_parents(object diagnostics, object context);
        
        /// <summary>
        /// Derivation for RedefinableTemplateSignature::/inheritedParameter
        ///result = (if extendedSignature->isEmpty() then Set{} else extendedSignature.parameter->asSet() endif)
        ///<p>From package UML::Classification.</p>
        /// </summary>
        ISetExpression<ITemplateParameter> GetInheritedParameters();
    }
}

