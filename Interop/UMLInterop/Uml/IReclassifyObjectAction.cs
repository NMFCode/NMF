//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for ReclassifyObjectAction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ReclassifyObjectAction))]
    [XmlDefaultImplementationTypeAttribute(typeof(ReclassifyObjectAction))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//ReclassifyObjectAction")]
    public interface IReclassifyObjectAction : IModelElement, IAction
    {
        
        /// <summary>
        /// Specifies whether existing Classifiers should be removed before adding the new Classifiers.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DefaultValueAttribute(false)]
        [TypeConverterAttribute(typeof(LowercaseBooleanConverter))]
        [DisplayNameAttribute("isReplaceAll")]
        [DescriptionAttribute("Specifies whether existing Classifiers should be removed before adding the new Cl" +
            "assifiers.\n<p>From package UML::Actions.</p>")]
        [CategoryAttribute("ReclassifyObjectAction")]
        [XmlElementNameAttribute("isReplaceAll")]
        [XmlAttributeAttribute(true)]
        bool IsReplaceAll
        {
            get;
            set;
        }
        
        /// <summary>
        /// A set of Classifiers to be added to the Classifiers of the given object.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("newClassifier")]
        [DescriptionAttribute("A set of Classifiers to be added to the Classifiers of the given object.\n<p>From " +
            "package UML::Actions.</p>")]
        [CategoryAttribute("ReclassifyObjectAction")]
        [XmlElementNameAttribute("newClassifier")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        ISetExpression<IClassifier> NewClassifier
        {
            get;
        }
        
        /// <summary>
        /// The InputPin that holds the object to be reclassified.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("object")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IInputPin Object
        {
            get;
            set;
        }
        
        /// <summary>
        /// A set of Classifiers to be removed from the Classifiers of the given object.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("oldClassifier")]
        [DescriptionAttribute("A set of Classifiers to be removed from the Classifiers of the given object.\n<p>F" +
            "rom package UML::Actions.</p>")]
        [CategoryAttribute("ReclassifyObjectAction")]
        [XmlElementNameAttribute("oldClassifier")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        ISetExpression<IClassifier> OldClassifier
        {
            get;
        }
        
        /// <summary>
        /// The object InputPin has no type.
        ///object.type = null
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Input_pin(object diagnostics, object context);
        
        /// <summary>
        /// None of the newClassifiers may be abstract.
        ///not newClassifier-&gt;exists(isAbstract)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Classifier_not_abstract(object diagnostics, object context);
        
        /// <summary>
        /// The multiplicity of the object InputPin is 1..1.
        ///object.is(1,1)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Multiplicity(object diagnostics, object context);
    }
}
