//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for StartClassifierBehaviorAction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(StartClassifierBehaviorAction))]
    [XmlDefaultImplementationTypeAttribute(typeof(StartClassifierBehaviorAction))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//StartClassifierBehaviorAction")]
    public interface IStartClassifierBehaviorAction : IModelElement, IAction
    {
        
        /// <summary>
        /// The InputPin that holds the object whose classifierBehavior is to be started.
        ///<p>From package UML::Actions.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("object")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IInputPin Object
        {
            get;
            set;
        }
        
        /// <summary>
        /// The multiplicity of the object InputPin is 1..1
        ///object.is(1,1)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Multiplicity(object diagnostics, object context);
        
        /// <summary>
        /// If the InputPin has a type, then the type or one of its ancestors must have a classifierBehavior.
        ///object.type->notEmpty() implies 
        ///   (object.type.oclIsKindOf(BehavioredClassifier) and object.type.oclAsType(BehavioredClassifier).classifierBehavior<>null)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Type_has_classifier(object diagnostics, object context);
    }
}

