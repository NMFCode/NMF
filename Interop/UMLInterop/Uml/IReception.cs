//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for Reception
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Reception))]
    [XmlDefaultImplementationTypeAttribute(typeof(Reception))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//Reception")]
    public interface IReception : IModelElement, IBehavioralFeature
    {
        
        /// <summary>
        /// The Signal that this Reception handles.
        ///<p>From package UML::SimpleClassifiers.</p>
        /// </summary>
        [DisplayNameAttribute("signal")]
        [DescriptionAttribute("The Signal that this Reception handles.\n<p>From package UML::SimpleClassifiers.</" +
            "p>")]
        [CategoryAttribute("Reception")]
        [XmlElementNameAttribute("signal")]
        [XmlAttributeAttribute(true)]
        ISignal Signal
        {
            get;
            set;
        }
        
        /// <summary>
        /// A Reception has the same name as its signal
        ///name = signal.name
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Same_name_as_signal(object diagnostics, object context);
        
        /// <summary>
        /// A Reception's parameters match the ownedAttributes of its signal by name, type, and multiplicity
        ///signal.ownedAttribute->size() = ownedParameter->size() and
        ///Sequence{1..signal.ownedAttribute->size()}->forAll( i | 
        ///    ownedParameter->at(i).direction = ParameterDirectionKind::_'in' and 
        ///    ownedParameter->at(i).name = signal.ownedAttribute->at(i).name and
        ///    ownedParameter->at(i).type = signal.ownedAttribute->at(i).type and
        ///    ownedParameter->at(i).lowerBound() = signal.ownedAttribute->at(i).lowerBound() and
        ///    ownedParameter->at(i).upperBound() = signal.ownedAttribute->at(i).upperBound()
        ///)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Same_structure_as_signal(object diagnostics, object context);
    }
}

