//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for ReadIsClassifiedObjectAction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(ReadIsClassifiedObjectAction))]
    [XmlDefaultImplementationTypeAttribute(typeof(ReadIsClassifiedObjectAction))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//ReadIsClassifiedObjectAction")]
    public interface IReadIsClassifiedObjectAction : IModelElement, IAction
    {
        
        /// <summary>
        /// Indicates whether the input object must be directly classified by the given Classifier or whether it may also be an instance of a specialization of the given Classifier.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DefaultValueAttribute(false)]
        [TypeConverterAttribute(typeof(LowercaseBooleanConverter))]
        [DisplayNameAttribute("isDirect")]
        [DescriptionAttribute("Indicates whether the input object must be directly classified by the given Class" +
            "ifier or whether it may also be an instance of a specialization of the given Cla" +
            "ssifier.\n<p>From package UML::Actions.</p>")]
        [CategoryAttribute("ReadIsClassifiedObjectAction")]
        [XmlElementNameAttribute("isDirect")]
        [XmlAttributeAttribute(true)]
        bool IsDirect
        {
            get;
            set;
        }
        
        /// <summary>
        /// The Classifier against which the classification of the input object is tested.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DisplayNameAttribute("classifier")]
        [DescriptionAttribute("The Classifier against which the classification of the input object is tested.\n<p" +
            ">From package UML::Actions.</p>")]
        [CategoryAttribute("ReadIsClassifiedObjectAction")]
        [XmlElementNameAttribute("classifier")]
        [XmlAttributeAttribute(true)]
        IClassifier Classifier
        {
            get;
            set;
        }
        
        /// <summary>
        /// The InputPin that holds the object whose classification is to be tested.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("object")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IInputPin Object
        {
            get;
            set;
        }
        
        /// <summary>
        /// The OutputPin that holds the Boolean result of the test.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("result")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IOutputPin Result
        {
            get;
            set;
        }
        
        /// <summary>
        /// The object InputPin has no type.
        ///object.type = null
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool No_type(object diagnostics, object context);
        
        /// <summary>
        /// The multiplicity of the result OutputPin is 1..1.
        ///result.is(1,1)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Multiplicity_of_output(object diagnostics, object context);
        
        /// <summary>
        /// The type of the result OutputPin is Boolean.
        ///result.type = Boolean
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Boolean_result(object diagnostics, object context);
        
        /// <summary>
        /// The multiplicity of the object InputPin is 1..1.
        ///object.is(1,1)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Multiplicity_of_input(object diagnostics, object context);
    }
}
