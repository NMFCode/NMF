//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    public class OccurrenceSpecificationToAfterCollection : ObservableOppositeSet<IOccurrenceSpecification, IGeneralOrdering>
    {
        
        public OccurrenceSpecificationToAfterCollection(IOccurrenceSpecification parent) : 
                base(parent)
        {
        }
        
        private void OnItemDeleted(object sender, System.EventArgs e)
        {
            this.Remove(((IGeneralOrdering)(sender)));
        }
        
        protected override void SetOpposite(IGeneralOrdering item, IOccurrenceSpecification parent)
        {
            if ((parent != null))
            {
                item.Deleted += this.OnItemDeleted;
                item.Before = parent;
            }
            else
            {
                item.Deleted -= this.OnItemDeleted;
                if ((item.Before == this.Parent))
                {
                    item.Before = parent;
                }
            }
        }
    }
}

