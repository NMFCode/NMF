//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for LinkAction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(LinkAction))]
    [XmlDefaultImplementationTypeAttribute(typeof(LinkAction))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//LinkAction")]
    public interface ILinkAction : IModelElement, IAction
    {
        
        /// <summary>
        /// The LinkEndData identifying the values on the ends of the links acting on by this LinkAction.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [LowerBoundAttribute(2)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("endData")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [ConstantAttribute()]
        IOrderedSetExpression<ILinkEndData> EndData
        {
            get;
        }
        
        /// <summary>
        /// InputPins used by the LinkEndData of the LinkAction.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [LowerBoundAttribute(1)]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("inputValue")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [ConstantAttribute()]
        IOrderedSetExpression<IInputPin> InputValue
        {
            get;
        }
        
        /// <summary>
        /// The inputValue InputPins is the same as the union of all the InputPins referenced by the endData.
        ///inputValue-&gt;asBag()=endData.allPins()
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Same_pins(object diagnostics, object context);
        
        /// <summary>
        /// The ends of the endData must all be from the same Association and include all and only the memberEnds of that association.
        ///endData.end = self.association().memberEnd-&gt;asBag()
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Same_association(object diagnostics, object context);
        
        /// <summary>
        /// The ends of the endData must not be static.
        ///endData-&gt;forAll(not end.isStatic)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Not_static(object diagnostics, object context);
        
        /// <summary>
        /// Returns the Association acted on by this LinkAction.
        ///result = (endData-&gt;asSequence()-&gt;first().end.association)
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        IAssociation Association();
    }
}
