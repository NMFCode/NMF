//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for TemplateParameter
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(TemplateParameter))]
    [XmlDefaultImplementationTypeAttribute(typeof(TemplateParameter))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//TemplateParameter")]
    public interface ITemplateParameter : IModelElement, IElement
    {
        
        /// <summary>
        /// The ParameterableElement that is the default for this formal TemplateParameter.
        ///<p>From package UML::CommonStructure.</p>
        /// </summary>
        [DisplayNameAttribute("default")]
        [DescriptionAttribute("The ParameterableElement that is the default for this formal TemplateParameter.\n<" +
            "p>From package UML::CommonStructure.</p>")]
        [CategoryAttribute("TemplateParameter")]
        [XmlElementNameAttribute("default")]
        [XmlAttributeAttribute(true)]
        IParameterableElement Default
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ParameterableElement that is owned by this TemplateParameter for the purpose of providing a default.
        ///<p>From package UML::CommonStructure.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownedDefault")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IParameterableElement OwnedDefault
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ParameterableElement exposed by this TemplateParameter.
        ///<p>From package UML::CommonStructure.</p>
        /// </summary>
        [DisplayNameAttribute("parameteredElement")]
        [DescriptionAttribute("The ParameterableElement exposed by this TemplateParameter.\n<p>From package UML::" +
            "CommonStructure.</p>")]
        [CategoryAttribute("TemplateParameter")]
        [XmlElementNameAttribute("parameteredElement")]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("templateParameter")]
        IParameterableElement ParameteredElement
        {
            get;
            set;
        }
        
        /// <summary>
        /// The TemplateSignature that owns this TemplateParameter.
        ///<p>From package UML::CommonStructure.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("signature")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("ownedParameter")]
        ITemplateSignature Signature
        {
            get;
            set;
        }
        
        /// <summary>
        /// The ParameterableElement that is owned by this TemplateParameter for the purpose of exposing it as the parameteredElement.
        ///<p>From package UML::CommonStructure.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("ownedParameteredElement")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        [XmlOppositeAttribute("owningTemplateParameter")]
        IParameterableElement OwnedParameteredElement
        {
            get;
            set;
        }
        
        /// <summary>
        /// The default must be compatible with the formal TemplateParameter.
        ///default <> null implies default.isCompatibleWith(parameteredElement)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Must_be_compatible(object diagnostics, object context);
    }
}

