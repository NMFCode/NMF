//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for Variable
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Variable))]
    [XmlDefaultImplementationTypeAttribute(typeof(Variable))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//Variable")]
    public interface IVariable : IModelElement, IMultiplicityElement, IConnectableElement
    {
        
        /// <summary>
        /// An Activity that owns the Variable.
        ///<p>From package UML::Activities.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("activityScope")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("variable")]
        IActivity ActivityScope
        {
            get;
            set;
        }
        
        /// <summary>
        /// A StructuredActivityNode that owns the Variable.
        ///<p>From package UML::Activities.</p>
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("scope")]
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Hidden)]
        [XmlAttributeAttribute(true)]
        [XmlOppositeAttribute("variable")]
        IStructuredActivityNode Scope
        {
            get;
            set;
        }
        
        /// <summary>
        /// A Variable is accessible by Actions within its scope (the Activity or StructuredActivityNode that owns it).
        ///result = (if scope<>null then scope.allOwnedNodes()->includes(a)
        ///else a.containingActivity()=activityScope
        ///endif)
        ///<p>From package UML::Activities.</p>
        /// </summary>
        /// <param name="a"></param>
        bool IsAccessibleBy(IAction a);
    }
}

