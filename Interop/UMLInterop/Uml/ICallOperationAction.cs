//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for CallOperationAction
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(CallOperationAction))]
    [XmlDefaultImplementationTypeAttribute(typeof(CallOperationAction))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//CallOperationAction")]
    public interface ICallOperationAction : IModelElement, ICallAction
    {
        
        /// <summary>
        /// The Operation being invoked.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [DisplayNameAttribute("operation")]
        [DescriptionAttribute("The Operation being invoked.\n<p>From package UML::Actions.</p>")]
        [CategoryAttribute("CallOperationAction")]
        [XmlElementNameAttribute("operation")]
        [XmlAttributeAttribute(true)]
        NMF.Interop.Uml.IOperation Operation
        {
            get;
            set;
        }
        
        /// <summary>
        /// The InputPin that provides the target object to which the Operation call request is sent.
        ///&lt;p&gt;From package UML::Actions.&lt;/p&gt;
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("target")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IInputPin Target
        {
            get;
            set;
        }
        
        /// <summary>
        /// If onPort has no value, the operation must be an owned or inherited feature of the type of the target InputPin, otherwise the Port given by onPort must be an owned or inherited feature of the type of the target InputPin, and the Port must have a required or provided Interface with the operation as an owned or inherited feature.
        ///if onPort=null then  target.type.oclAsType(Classifier).allFeatures()-&gt;includes(operation)
        ///else target.type.oclAsType(Classifier).allFeatures()-&gt;includes(onPort) and onPort.provided-&gt;union(onPort.required).allFeatures()-&gt;includes(operation)
        ///endif
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Type_target_pin(object diagnostics, object context);
    }
}
