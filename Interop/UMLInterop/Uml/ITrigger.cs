//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.25
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;

namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for Trigger
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Trigger))]
    [XmlDefaultImplementationTypeAttribute(typeof(Trigger))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//Trigger")]
    public interface ITrigger : IModelElement, INamedElement
    {
        
        /// <summary>
        /// The Event that detected by the Trigger.
        ///<p>From package UML::CommonBehavior.</p>
        /// </summary>
        [DisplayNameAttribute("event")]
        [DescriptionAttribute("The Event that detected by the Trigger.\n<p>From package UML::CommonBehavior.</p>")]
        [CategoryAttribute("Trigger")]
        [XmlElementNameAttribute("event")]
        [XmlAttributeAttribute(true)]
        NMF.Interop.Uml.IEvent Event
        {
            get;
            set;
        }
        
        /// <summary>
        /// A optional Port of through which the given effect is detected.
        ///<p>From package UML::CommonBehavior.</p>
        /// </summary>
        [DesignerSerializationVisibilityAttribute(DesignerSerializationVisibility.Content)]
        [DisplayNameAttribute("port")]
        [DescriptionAttribute("A optional Port of through which the given effect is detected.\n<p>From package UM" +
            "L::CommonBehavior.</p>")]
        [CategoryAttribute("Trigger")]
        [XmlElementNameAttribute("port")]
        [XmlAttributeAttribute(true)]
        [ConstantAttribute()]
        ISetExpression<IPort> Port
        {
            get;
        }
        
        /// <summary>
        /// If a Trigger specifies one or more ports, the event of the Trigger must be a MessageEvent.
        ///port->notEmpty() implies event.oclIsKindOf(MessageEvent)
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Trigger_with_ports(object diagnostics, object context);
    }
}

