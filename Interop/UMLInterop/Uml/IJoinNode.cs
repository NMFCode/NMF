//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for JoinNode
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(JoinNode))]
    [XmlDefaultImplementationTypeAttribute(typeof(JoinNode))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//JoinNode")]
    public interface IJoinNode : IModelElement, IControlNode
    {
        
        /// <summary>
        /// Indicates whether incoming tokens having objects with the same identity are combined into one by the JoinNode.
        ///&lt;p&gt;From package UML::Activities.&lt;/p&gt;
        /// </summary>
        [DefaultValueAttribute(true)]
        [TypeConverterAttribute(typeof(LowercaseBooleanConverter))]
        [DisplayNameAttribute("isCombineDuplicate")]
        [DescriptionAttribute("Indicates whether incoming tokens having objects with the same identity are combi" +
            "ned into one by the JoinNode.\n<p>From package UML::Activities.</p>")]
        [CategoryAttribute("JoinNode")]
        [XmlElementNameAttribute("isCombineDuplicate")]
        [XmlAttributeAttribute(true)]
        bool IsCombineDuplicate
        {
            get;
            set;
        }
        
        /// <summary>
        /// A ValueSpecification giving the condition under which the JoinNode will offer a token on its outgoing ActivityEdge. If no joinSpec is specified, then the JoinNode will offer an outgoing token if tokens are offered on all of its incoming ActivityEdges (an &quot;and&quot; condition).
        ///&lt;p&gt;From package UML::Activities.&lt;/p&gt;
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("joinSpec")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IValueSpecification JoinSpec
        {
            get;
            set;
        }
        
        /// <summary>
        /// A JoinNode has one outgoing ActivityEdge.
        ///outgoing-&gt;size() = 1
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool One_outgoing_edge(object diagnostics, object context);
        
        /// <summary>
        /// If one of the incoming ActivityEdges of a JoinNode is an ObjectFlow, then its outgoing ActivityEdge must be an ObjectFlow. Otherwise its outgoing ActivityEdge must be a ControlFlow.
        ///if incoming-&gt;exists(oclIsKindOf(ObjectFlow)) then outgoing-&gt;forAll(oclIsKindOf(ObjectFlow))
        ///else outgoing-&gt;forAll(oclIsKindOf(ControlFlow))
        ///endif
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Incoming_object_flow(object diagnostics, object context);
    }
}
