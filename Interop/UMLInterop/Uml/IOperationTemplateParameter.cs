//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Interop.Ecore;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Uml
{
    
    
    /// <summary>
    /// The public interface for OperationTemplateParameter
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(OperationTemplateParameter))]
    [XmlDefaultImplementationTypeAttribute(typeof(OperationTemplateParameter))]
    [ModelRepresentationClassAttribute("http://www.eclipse.org/uml2/5.0.0/UML#//OperationTemplateParameter")]
    public interface IOperationTemplateParameter : IModelElement, ITemplateParameter
    {
        
        /// <summary>
        /// default-&gt;notEmpty() implies (default.oclIsKindOf(Operation) and (let defaultOp : Operation = default.oclAsType(Operation) in 
        ///    defaultOp.ownedParameter-&gt;size() = parameteredElement.ownedParameter-&gt;size() and
        ///    Sequence{1.. defaultOp.ownedParameter-&gt;size()}-&gt;forAll( ix | 
        ///        let p1: Parameter = defaultOp.ownedParameter-&gt;at(ix), p2 : Parameter = parameteredElement.ownedParameter-&gt;at(ix) in
        ///          p1.type = p2.type and p1.upper = p2.upper and p1.lower = p2.lower and p1.direction = p2.direction and p1.isOrdered = p2.isOrdered and p1.isUnique = p2.isUnique)))
        /// </summary>
        /// <param name="diagnostics">The chain of diagnostics to which problems are to be appended.</param>
        /// <param name="context">The cache of context-specific information.</param>
        bool Match_default_signature(object diagnostics, object context);
    }
}
