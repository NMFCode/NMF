//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;
using System.ComponentModel;
using System.Diagnostics;
using System.Globalization;
using System.Linq;


namespace NMF.Interop.Cmof
{
    
    
    /// <summary>
    /// The public interface for Object
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(Object))]
    [XmlDefaultImplementationTypeAttribute(typeof(Object))]
    [ModelRepresentationClassAttribute("http://www.omg.org/spec/MOF/20131001/cmof.xmi#//Object")]
    public interface IObject : IModelElement
    {
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        IObject Get(IProperty property);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="element"></param>
        bool Equals(IObject element);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        /// <param name="value"></param>
        void Set(IProperty property, IObject value);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        bool IsSet(IProperty property);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="property"></param>
        void Unset(IProperty property);
        
        /// <summary>
        /// 
        /// </summary>
        /// <param name="op"></param>
        /// <param name="arguments"></param>
        IObject Invoke(NMF.Interop.Cmof.IOperation op, IEnumerable<IArgument> arguments);
    }
}
