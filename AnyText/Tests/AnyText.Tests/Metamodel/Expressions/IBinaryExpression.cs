//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:6.0.26
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using NMF.Collections.Generic;
using NMF.Collections.ObjectModel;
using NMF.Expressions;
using NMF.Expressions.Linq;
using NMF.Models;
using NMF.Models.Collections;
using NMF.Models.Expressions;
using NMF.Models.Meta;
using NMF.Models.Repository;
using NMF.Serialization;
using NMF.Utilities;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;


namespace AnyText.Test.Metamodel.Expressions
{
    
    
    /// <summary>
    /// The public interface for BinaryExpression
    /// </summary>
    [DefaultImplementationTypeAttribute(typeof(BinaryExpression))]
    [XmlDefaultImplementationTypeAttribute(typeof(BinaryExpression))]
    [ModelRepresentationClassAttribute("anytext:exp#//BinaryExpression")]
    public partial interface IBinaryExpression : IModelElement, IExpression
    {
        
        /// <summary>
        /// The operator property
        /// </summary>
        [DisplayNameAttribute("operator")]
        [CategoryAttribute("BinaryExpression")]
        [XmlElementNameAttribute("operator")]
        [XmlAttributeAttribute(true)]
        BinaryOperator Operator
        {
            get;
            set;
        }
        
        /// <summary>
        /// The right property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("right")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IExpression Right
        {
            get;
            set;
        }
        
        /// <summary>
        /// The left property
        /// </summary>
        [BrowsableAttribute(false)]
        [XmlElementNameAttribute("left")]
        [XmlAttributeAttribute(false)]
        [ContainmentAttribute()]
        IExpression Left
        {
            get;
            set;
        }
    }
}
